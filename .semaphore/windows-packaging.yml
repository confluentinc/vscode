version: v1.0
name: windows-packaging
agent:
  machine:
    type: s1-prod-windows

auto_cancel:
  running:
    when: "branch != 'main'"

execution_time_limit:
  hours: 1

queue:
  - when: "branch != 'main'"
    processing: parallel

global_job_config:
  env_vars:
    - name: WINDOWS
      value: "true"
    - name: NODE_ENV
      value: "production"
  prologue:
    commands:
      - checkout
      - $Env:PATH += ";C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64"
      - $Env:PATH += ";C:\Program Files\Git\bin"
      - $Env:VAULT_ADDR = "https://vault.cireops.gcp.internal.confluent.cloud"
      - vault login -no-print token=$(vault write -field=token "auth/semaphore_self_hosted/login" role="default" jwt="$Env:SEMAPHORE_OIDC_TOKEN")
      # Ensure npm and npx are available
      - npm --version
      - npx --version
      - choco install gh -y
      - $Env:PATH += ";C:\Program Files\GitHub CLI\"
      - gh --version
      - |
        $Env:GH_TOKEN = [Environment]::GetEnvironmentVariable('GITHUB_TOKEN', 'Machine')
        gh config set prompt disabled
        gh auth login
        gh auth status

blocks:
  - name: "Package VSIX (Windows x64)"
    dependencies: []
    task:
      prologue:
        commands:
          - npm ci --include=dev
      env_vars:
        - name: TARGET
          value: win32-x64
      jobs:
        - name: "Package VSIX (Windows x64)"
          commands:
            # Download ide-sidecar third party notices to include in the VSIX
            - |
              $IDE_SIDECAR_VERSION = Get-Content .versions/ide-sidecar.txt
              gh release download $IDE_SIDECAR_VERSION --repo confluentinc/ide-sidecar --pattern=THIRD_PARTY_NOTICES.txt --output THIRD_PARTY_NOTICES_IDE_SIDECAR.txt --clobber
            # Build the VSIX
            - npx gulp bundle
            # Upload the VSIX to the GitHub release
            - |
              $packageJson = Get-Content -Path "package.json" -Raw | ConvertFrom-Json;
              $version = "v$($packageJson.version)";
              $vsix = Get-ChildItem out -Filter "*.vsix" | Select-Object -ExpandProperty FullName;
              try {artifact push workflow $vsix --destination "packaged-vsix-files/$($vsix | Split-Path -Leaf)"} catch {Write-Host "Artifact push failed"}
              $Env:GH_TOKEN = [Environment]::GetEnvironmentVariable('GITHUB_TOKEN', 'Machine')
              gh config set prompt disabled
              gh auth login
              gh auth status
              Write-Host "Uploading $vsix to the release $version"
              gh release upload $version $vsix --clobber
