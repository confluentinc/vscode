version: v1.0
name: multi-arch-packaging
agent:
  machine:
    type: s1-prod-ubuntu24-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'main'"

execution_time_limit:
  hours: 1

queue:
  - when: "branch != 'main'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - checkout
      - . vault-setup
  env_vars:
    - name: NODE_ENV
      value: "production"

blocks:
  - name: "Package VSIX Files"
    dependencies: []
    task:
      prologue:
        commands:
          - make install-dependencies
      jobs:
        - name: "Package VSIX Files"
          matrix:
            - env_var: TARGET
              values:
                - darwin-x64
                - darwin-arm64
                - linux-x64
                - linux-arm64
                - win32-x64
          commands:
            - |
              case "$TARGET" in
                darwin-x64)  export SIDECAR_OS_ARCH=macos-amd64 ;;
                darwin-arm64) export SIDECAR_OS_ARCH=macos-arm64 ;;
                linux-x64)   export SIDECAR_OS_ARCH=linux-amd64 ;;
                linux-arm64) export SIDECAR_OS_ARCH=linux-arm64 ;;
                win32-x64)   export SIDECAR_OS_ARCH=windows-x64 ;;
                *) echo "Unknown TARGET: $TARGET" && exit 1 ;;
              esac
            - make download-sidecar-executable
            - make download-third-party-notices-sidecar || true
            - npx gulp bundle
            - VSIX_FILE=$(find out/ -name "*.vsix")
            - artifact push workflow ${VSIX_FILE} --destination packaged-vsix-files/$(basename ${VSIX_FILE}) --force

  - name: "Upload VSIX files to GitHub"
    run:
      when: "branch =~ '.*' and change_in('/release.svg', {pipeline_file: 'ignore', branch_range: '$SEMAPHORE_GIT_COMMIT_RANGE', default_branch: 'main'})"
    dependencies:
      - "Package VSIX Files"
    task:
      jobs:
        - name: "Upload VSIX files to GitHub"
          commands:
            - artifact pull workflow packaged-vsix-files/
            - make upload-vsix-files-to-gh-releases
