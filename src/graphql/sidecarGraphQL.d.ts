/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'CCloudConnection': { kind: 'OBJECT'; name: 'CCloudConnection'; fields: { 'environments': { name: 'environments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudEnvironment'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organizations': { name: 'organizations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudOrganization'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConnectionType'; ofType: null; }; } }; }; };
    'CCloudEnvironment': { kind: 'OBJECT'; name: 'CCloudEnvironment'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'flinkComputePools': { name: 'flinkComputePools'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudFlinkComputePool'; ofType: null; }; }; } }; 'governancePackage': { name: 'governancePackage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CCloudGovernancePackage'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kafkaClusters': { name: 'kafkaClusters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudKafkaCluster'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudReference'; ofType: null; }; } }; 'schemaRegistry': { name: 'schemaRegistry'; type: { kind: 'OBJECT'; name: 'CCloudSchemaRegistry'; ofType: null; } }; }; };
    'CCloudFlinkComputePool': { kind: 'OBJECT'; name: 'CCloudFlinkComputePool'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'display_name': { name: 'display_name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'max_cfu': { name: 'max_cfu'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'region': { name: 'region'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CCloudGovernancePackage': { name: 'CCloudGovernancePackage'; enumValues: 'ADVANCED' | 'ESSENTIALS' | 'NONE'; };
    'CCloudKafkaCluster': { kind: 'OBJECT'; name: 'CCloudKafkaCluster'; fields: { 'bootstrapServers': { name: 'bootstrapServers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'environment': { name: 'environment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudReference'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudReference'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CloudProvider'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CCloudOrganization': { kind: 'OBJECT'; name: 'CCloudOrganization'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'current': { name: 'current'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CCloudReference': { kind: 'OBJECT'; name: 'CCloudReference'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CCloudSchemaRegistry': { kind: 'OBJECT'; name: 'CCloudSchemaRegistry'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'environment': { name: 'environment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudReference'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'organization': { name: 'organization'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudReference'; ofType: null; }; } }; 'provider': { name: 'provider'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CloudProvider'; ofType: null; }; } }; 'region': { name: 'region'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CloudProvider': { name: 'CloudProvider'; enumValues: 'AWS' | 'AZURE' | 'GCP' | 'NONE'; };
    'ConfluentLocalKafkaCluster': { kind: 'OBJECT'; name: 'ConfluentLocalKafkaCluster'; fields: { 'bootstrapServers': { name: 'bootstrapServers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kafkaRestHostName': { name: 'kafkaRestHostName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ConnectionType': { name: 'ConnectionType'; enumValues: 'CCLOUD' | 'DIRECT' | 'LOCAL' | 'PLATFORM'; };
    'DirectConnection': { kind: 'OBJECT'; name: 'DirectConnection'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kafkaCluster': { name: 'kafkaCluster'; type: { kind: 'OBJECT'; name: 'DirectKafkaCluster'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'schemaRegistry': { name: 'schemaRegistry'; type: { kind: 'OBJECT'; name: 'DirectSchemaRegistry'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConnectionType'; ofType: null; }; } }; }; };
    'DirectKafkaCluster': { kind: 'OBJECT'; name: 'DirectKafkaCluster'; fields: { 'bootstrapServers': { name: 'bootstrapServers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DirectSchemaRegistry': { kind: 'OBJECT'; name: 'DirectSchemaRegistry'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Int': unknown;
    'LocalConnection': { kind: 'OBJECT'; name: 'LocalConnection'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'kafkaCluster': { name: 'kafkaCluster'; type: { kind: 'OBJECT'; name: 'ConfluentLocalKafkaCluster'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'schemaRegistry': { name: 'schemaRegistry'; type: { kind: 'OBJECT'; name: 'LocalSchemaRegistry'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ConnectionType'; ofType: null; }; } }; }; };
    'LocalSchemaRegistry': { kind: 'OBJECT'; name: 'LocalSchemaRegistry'; fields: { 'connectionId': { name: 'connectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'uri': { name: 'uri'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'ccloudConnectionById': { name: 'ccloudConnectionById'; type: { kind: 'OBJECT'; name: 'CCloudConnection'; ofType: null; } }; 'ccloudConnections': { name: 'ccloudConnections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudConnection'; ofType: null; }; }; } }; 'directConnections': { name: 'directConnections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'DirectConnection'; ofType: null; }; }; } }; 'findCCloudKafkaClusters': { name: 'findCCloudKafkaClusters'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudKafkaCluster'; ofType: null; }; }; } }; 'getFlinkComputePools': { name: 'getFlinkComputePools'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'CCloudFlinkComputePool'; ofType: null; }; }; } }; 'localConnections': { name: 'localConnections'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'LocalConnection'; ofType: null; }; }; } }; }; };
    'String': unknown;
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: never;
  subscription: never;
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}