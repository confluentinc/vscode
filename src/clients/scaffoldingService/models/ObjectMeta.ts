/* tslint:disable */
/* eslint-disable */
/**
 * Scaffolding API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
 * @export
 * @interface ObjectMeta
 */
export interface ObjectMeta {
  /**
   * Self is a Uniform Resource Locator (URL) at which an object can be addressed. This URL encodes the service location, API version, and other particulars necessary to locate the resource at a point in time
   * @type {string}
   * @memberof ObjectMeta
   */
  readonly self: string;
  /**
   * Resource Name is a Uniform Resource Identifier (URI) that is globally unique across space and time. It is represented as a Confluent Resource Name
   * @type {string}
   * @memberof ObjectMeta
   */
  readonly resource_name?: string;
  /**
   * The date and time at which this object was created. It is represented in RFC3339 format and is in UTC.
   * @type {Date}
   * @memberof ObjectMeta
   */
  readonly created_at?: Date;
  /**
   * The date and time at which this object was last updated. It is represented in RFC3339 format and is in UTC.
   * @type {Date}
   * @memberof ObjectMeta
   */
  readonly updated_at?: Date;
  /**
   * The date and time at which this object was (or will be) deleted. It is represented in RFC3339 format and is in UTC.
   * @type {Date}
   * @memberof ObjectMeta
   */
  readonly deleted_at?: Date;
}

/**
 * Check if a given object implements the ObjectMeta interface.
 */
export function instanceOfObjectMeta(value: object): value is ObjectMeta {
  if (!("self" in value) || value["self"] === undefined) return false;
  return true;
}

export function ObjectMetaFromJSON(json: any): ObjectMeta {
  return ObjectMetaFromJSONTyped(json, false);
}

export function ObjectMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectMeta {
  if (json == null) {
    return json;
  }
  return {
    self: json["self"],
    resource_name: json["resource_name"] == null ? undefined : json["resource_name"],
    created_at: json["created_at"] == null ? undefined : new Date(json["created_at"]),
    updated_at: json["updated_at"] == null ? undefined : new Date(json["updated_at"]),
    deleted_at: json["deleted_at"] == null ? undefined : new Date(json["deleted_at"]),
  };
}

export function ObjectMetaToJSON(json: any): ObjectMeta {
  return ObjectMetaToJSONTyped(json, false);
}

export function ObjectMetaToJSONTyped(
  value?: Omit<
    ObjectMeta,
    "self" | "resource_name" | "created_at" | "updated_at" | "deleted_at"
  > | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {};
}
