/* tslint:disable */
/* eslint-disable */
/**
 * Scaffolding API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ScaffoldV1TemplateCollectionListDataInner } from "./ScaffoldV1TemplateCollectionListDataInner";
import {
  ScaffoldV1TemplateCollectionListDataInnerFromJSON,
  ScaffoldV1TemplateCollectionListDataInnerFromJSONTyped,
  ScaffoldV1TemplateCollectionListDataInnerToJSON,
  ScaffoldV1TemplateCollectionListDataInnerToJSONTyped,
} from "./ScaffoldV1TemplateCollectionListDataInner";
import type { ScaffoldV1TemplateCollectionListMetadata } from "./ScaffoldV1TemplateCollectionListMetadata";
import {
  ScaffoldV1TemplateCollectionListMetadataFromJSON,
  ScaffoldV1TemplateCollectionListMetadataFromJSONTyped,
  ScaffoldV1TemplateCollectionListMetadataToJSON,
  ScaffoldV1TemplateCollectionListMetadataToJSONTyped,
} from "./ScaffoldV1TemplateCollectionListMetadata";

/**
 * Template collections curate sets of templates.
 *
 * ## The Template Collections Model
 * <SchemaDefinition schemaRef="#/components/schemas/scaffold.v1.TemplateCollection" />
 * @export
 * @interface ScaffoldV1TemplateCollectionList
 */
export interface ScaffoldV1TemplateCollectionList {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof ScaffoldV1TemplateCollectionList
   */
  readonly api_version: ScaffoldV1TemplateCollectionListApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof ScaffoldV1TemplateCollectionList
   */
  readonly kind: ScaffoldV1TemplateCollectionListKindEnum;
  /**
   *
   * @type {ScaffoldV1TemplateCollectionListMetadata}
   * @memberof ScaffoldV1TemplateCollectionList
   */
  metadata: ScaffoldV1TemplateCollectionListMetadata;
  /**
   * A data property that contains an array of resource items. Each entry in the array is a separate resource.
   * @type {Set<ScaffoldV1TemplateCollectionListDataInner>}
   * @memberof ScaffoldV1TemplateCollectionList
   */
  data: Set<ScaffoldV1TemplateCollectionListDataInner>;
}

/**
 * @export
 */
export const ScaffoldV1TemplateCollectionListApiVersionEnum = {
  ScaffoldV1: "scaffold/v1",
} as const;
export type ScaffoldV1TemplateCollectionListApiVersionEnum =
  (typeof ScaffoldV1TemplateCollectionListApiVersionEnum)[keyof typeof ScaffoldV1TemplateCollectionListApiVersionEnum];

/**
 * @export
 */
export const ScaffoldV1TemplateCollectionListKindEnum = {
  TemplateCollectionList: "TemplateCollectionList",
} as const;
export type ScaffoldV1TemplateCollectionListKindEnum =
  (typeof ScaffoldV1TemplateCollectionListKindEnum)[keyof typeof ScaffoldV1TemplateCollectionListKindEnum];

/**
 * Check if a given object implements the ScaffoldV1TemplateCollectionList interface.
 */
export function instanceOfScaffoldV1TemplateCollectionList(
  value: object,
): value is ScaffoldV1TemplateCollectionList {
  if (!("api_version" in value) || value["api_version"] === undefined) return false;
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("data" in value) || value["data"] === undefined) return false;
  return true;
}

export function ScaffoldV1TemplateCollectionListFromJSON(
  json: any,
): ScaffoldV1TemplateCollectionList {
  return ScaffoldV1TemplateCollectionListFromJSONTyped(json, false);
}

export function ScaffoldV1TemplateCollectionListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ScaffoldV1TemplateCollectionList {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"],
    kind: json["kind"],
    metadata: ScaffoldV1TemplateCollectionListMetadataFromJSON(json["metadata"]),
    data: new Set(
      (json["data"] as Array<any>).map(ScaffoldV1TemplateCollectionListDataInnerFromJSON),
    ),
  };
}

export function ScaffoldV1TemplateCollectionListToJSON(
  json: any,
): ScaffoldV1TemplateCollectionList {
  return ScaffoldV1TemplateCollectionListToJSONTyped(json, false);
}

export function ScaffoldV1TemplateCollectionListToJSONTyped(
  value?: Omit<ScaffoldV1TemplateCollectionList, "api_version" | "kind"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: ScaffoldV1TemplateCollectionListMetadataToJSON(value["metadata"]),
    data: Array.from(value["data"] as Set<any>).map(
      ScaffoldV1TemplateCollectionListDataInnerToJSON,
    ),
  };
}
