/* tslint:disable */
/* eslint-disable */
/**
 * Flink Artifact Management API
 * This is the Flink Artifact Management API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ArtifactV1PresignedUrlRequestMetadata } from "./ArtifactV1PresignedUrlRequestMetadata";
import {
  ArtifactV1PresignedUrlRequestMetadataFromJSON,
  ArtifactV1PresignedUrlRequestMetadataFromJSONTyped,
  ArtifactV1PresignedUrlRequestMetadataToJSON,
  ArtifactV1PresignedUrlRequestMetadataToJSONTyped,
} from "./ArtifactV1PresignedUrlRequestMetadata";

/**
 * Request schema of the presigned upload URL.
 *
 * @export
 * @interface ArtifactV1PresignedUrlRequest
 */
export interface ArtifactV1PresignedUrlRequest {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  readonly api_version?: ArtifactV1PresignedUrlRequestApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  readonly kind?: ArtifactV1PresignedUrlRequestKindEnum;
  /**
   * ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  readonly id?: string;
  /**
   *
   * @type {ArtifactV1PresignedUrlRequestMetadata}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  metadata?: ArtifactV1PresignedUrlRequestMetadata;
  /**
   * Archive format of the Flink Artifact.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  content_format?: string;
  /**
   * Cloud provider where the Flink Artifact archive is uploaded.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  cloud?: string;
  /**
   * The Cloud provider region the Flink Artifact archive is uploaded.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  region?: string;
  /**
   * The Environment the uploaded Flink Artifact belongs to.
   * @type {string}
   * @memberof ArtifactV1PresignedUrlRequest
   */
  environment?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum ArtifactV1PresignedUrlRequestApiVersionEnum {
  ArtifactV1 = "artifact/v1",
}
/**
 * @export
 * @enum {string}
 */
export enum ArtifactV1PresignedUrlRequestKindEnum {
  PresignedUrlRequest = "PresignedUrlRequest",
}

/**
 * Check if a given object implements the ArtifactV1PresignedUrlRequest interface.
 */
export function instanceOfArtifactV1PresignedUrlRequest(
  value: object,
): value is ArtifactV1PresignedUrlRequest {
  return true;
}

export function ArtifactV1PresignedUrlRequestFromJSON(json: any): ArtifactV1PresignedUrlRequest {
  return ArtifactV1PresignedUrlRequestFromJSONTyped(json, false);
}

export function ArtifactV1PresignedUrlRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ArtifactV1PresignedUrlRequest {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"] == null ? undefined : json["api_version"],
    kind: json["kind"] == null ? undefined : json["kind"],
    id: json["id"] == null ? undefined : json["id"],
    metadata:
      json["metadata"] == null
        ? undefined
        : ArtifactV1PresignedUrlRequestMetadataFromJSON(json["metadata"]),
    content_format: json["content_format"] == null ? undefined : json["content_format"],
    cloud: json["cloud"] == null ? undefined : json["cloud"],
    region: json["region"] == null ? undefined : json["region"],
    environment: json["environment"] == null ? undefined : json["environment"],
  };
}

export function ArtifactV1PresignedUrlRequestToJSON(json: any): ArtifactV1PresignedUrlRequest {
  return ArtifactV1PresignedUrlRequestToJSONTyped(json, false);
}

export function ArtifactV1PresignedUrlRequestToJSONTyped(
  value?: Omit<ArtifactV1PresignedUrlRequest, "api_version" | "kind" | "id"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: ArtifactV1PresignedUrlRequestMetadataToJSON(value["metadata"]),
    content_format: value["content_format"],
    cloud: value["cloud"],
    region: value["region"],
    environment: value["environment"],
  };
}
