/* tslint:disable */
/* eslint-disable */
/**
 * Flink Artifact Management API
 * This is the Flink Artifact Management API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ArtifactV1FlinkArtifactVersion } from "./ArtifactV1FlinkArtifactVersion";
import {
  ArtifactV1FlinkArtifactVersionFromJSON,
  ArtifactV1FlinkArtifactVersionFromJSONTyped,
  ArtifactV1FlinkArtifactVersionToJSON,
  ArtifactV1FlinkArtifactVersionToJSONTyped,
} from "./ArtifactV1FlinkArtifactVersion";
import type { ArtifactV1FlinkArtifactMetadata } from "./ArtifactV1FlinkArtifactMetadata";
import {
  ArtifactV1FlinkArtifactMetadataFromJSON,
  ArtifactV1FlinkArtifactMetadataFromJSONTyped,
  ArtifactV1FlinkArtifactMetadataToJSON,
  ArtifactV1FlinkArtifactMetadataToJSONTyped,
} from "./ArtifactV1FlinkArtifactMetadata";

/**
 *
 * @export
 * @interface GetArtifactV1FlinkArtifact200Response
 */
export interface GetArtifactV1FlinkArtifact200Response {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  readonly api_version: GetArtifactV1FlinkArtifact200ResponseApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  readonly kind: GetArtifactV1FlinkArtifact200ResponseKindEnum;
  /**
   * ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  readonly id: string;
  /**
   *
   * @type {ArtifactV1FlinkArtifactMetadata}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  metadata?: ArtifactV1FlinkArtifactMetadata;
  /**
   * Cloud provider where the Flink Artifact archive is uploaded.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  cloud: string;
  /**
   * The Cloud provider region the Flink Artifact archive is uploaded.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  region: string;
  /**
   * Environment the Flink Artifact belongs to.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  environment: string;
  /**
   * Unique name of the Flink Artifact per cloud, region, environment scope.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  display_name: string;
  /**
   * Java class or alias for the artifact as provided by developer. Deprecated
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   * @deprecated
   */
  _class?: string;
  /**
   * Archive format of the Flink Artifact.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  content_format?: string;
  /**
   * Description of the Flink Artifact.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  description?: string;
  /**
   * Documentation link of the Flink Artifact.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  documentation_link?: string;
  /**
   * Runtime language of the Flink Artifact.
   * @type {string}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  runtime_language?: string;
  /**
   * Versions associated with this Flink Artifact.
   * @type {Array<ArtifactV1FlinkArtifactVersion>}
   * @memberof GetArtifactV1FlinkArtifact200Response
   */
  versions?: Array<ArtifactV1FlinkArtifactVersion>;
}

/**
 * @export
 * @enum {string}
 */
export enum GetArtifactV1FlinkArtifact200ResponseApiVersionEnum {
  ArtifactV1 = "artifact/v1",
}
/**
 * @export
 * @enum {string}
 */
export enum GetArtifactV1FlinkArtifact200ResponseKindEnum {
  FlinkArtifact = "FlinkArtifact",
}

/**
 * Check if a given object implements the GetArtifactV1FlinkArtifact200Response interface.
 */
export function instanceOfGetArtifactV1FlinkArtifact200Response(
  value: object,
): value is GetArtifactV1FlinkArtifact200Response {
  if (!("api_version" in value) || value["api_version"] === undefined) return false;
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("cloud" in value) || value["cloud"] === undefined) return false;
  if (!("region" in value) || value["region"] === undefined) return false;
  if (!("environment" in value) || value["environment"] === undefined) return false;
  if (!("display_name" in value) || value["display_name"] === undefined) return false;
  return true;
}

export function GetArtifactV1FlinkArtifact200ResponseFromJSON(
  json: any,
): GetArtifactV1FlinkArtifact200Response {
  return GetArtifactV1FlinkArtifact200ResponseFromJSONTyped(json, false);
}

export function GetArtifactV1FlinkArtifact200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetArtifactV1FlinkArtifact200Response {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"],
    kind: json["kind"],
    id: json["id"],
    metadata:
      json["metadata"] == null
        ? undefined
        : ArtifactV1FlinkArtifactMetadataFromJSON(json["metadata"]),
    cloud: json["cloud"],
    region: json["region"],
    environment: json["environment"],
    display_name: json["display_name"],
    _class: json["class"] == null ? undefined : json["class"],
    content_format: json["content_format"] == null ? undefined : json["content_format"],
    description: json["description"] == null ? undefined : json["description"],
    documentation_link: json["documentation_link"] == null ? undefined : json["documentation_link"],
    runtime_language: json["runtime_language"] == null ? undefined : json["runtime_language"],
    versions:
      json["versions"] == null
        ? undefined
        : (json["versions"] as Array<any>).map(ArtifactV1FlinkArtifactVersionFromJSON),
  };
}

export function GetArtifactV1FlinkArtifact200ResponseToJSON(
  json: any,
): GetArtifactV1FlinkArtifact200Response {
  return GetArtifactV1FlinkArtifact200ResponseToJSONTyped(json, false);
}

export function GetArtifactV1FlinkArtifact200ResponseToJSONTyped(
  value?: Omit<GetArtifactV1FlinkArtifact200Response, "api_version" | "kind" | "id"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: ArtifactV1FlinkArtifactMetadataToJSON(value["metadata"]),
    cloud: value["cloud"],
    region: value["region"],
    environment: value["environment"],
    display_name: value["display_name"],
    class: value["_class"],
    content_format: value["content_format"],
    description: value["description"],
    documentation_link: value["documentation_link"],
    runtime_language: value["runtime_language"],
    versions:
      value["versions"] == null
        ? undefined
        : (value["versions"] as Array<any>).map(ArtifactV1FlinkArtifactVersionToJSON),
  };
}
