/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { SqlV1ConnectionStatus } from "./SqlV1ConnectionStatus";
import {
  SqlV1ConnectionStatusFromJSON,
  SqlV1ConnectionStatusFromJSONTyped,
  SqlV1ConnectionStatusToJSON,
  SqlV1ConnectionStatusToJSONTyped,
} from "./SqlV1ConnectionStatus";
import type { SqlV1ConnectionMetadata } from "./SqlV1ConnectionMetadata";
import {
  SqlV1ConnectionMetadataFromJSON,
  SqlV1ConnectionMetadataFromJSONTyped,
  SqlV1ConnectionMetadataToJSON,
  SqlV1ConnectionMetadataToJSONTyped,
} from "./SqlV1ConnectionMetadata";

/**
 *
 * @export
 * @interface SqlV1ConnectionListDataInner
 */
export interface SqlV1ConnectionListDataInner {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof SqlV1ConnectionListDataInner
   */
  readonly api_version: SqlV1ConnectionListDataInnerApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof SqlV1ConnectionListDataInner
   */
  readonly kind: SqlV1ConnectionListDataInnerKindEnum;
  /**
   *
   * @type {SqlV1ConnectionMetadata}
   * @memberof SqlV1ConnectionListDataInner
   */
  metadata: SqlV1ConnectionMetadata;
  /**
   * The user provided name of the resource, unique within this environment.
   * @type {string}
   * @memberof SqlV1ConnectionListDataInner
   */
  name: string;
  /**
   *
   * @type {object}
   * @memberof SqlV1ConnectionListDataInner
   */
  spec: object;
  /**
   *
   * @type {SqlV1ConnectionStatus}
   * @memberof SqlV1ConnectionListDataInner
   */
  status: SqlV1ConnectionStatus;
}

/**
 * @export
 * @enum {string}
 */
export enum SqlV1ConnectionListDataInnerApiVersionEnum {
  SqlV1 = "sql/v1",
}
/**
 * @export
 * @enum {string}
 */
export enum SqlV1ConnectionListDataInnerKindEnum {
  Connection = "Connection",
}

/**
 * Check if a given object implements the SqlV1ConnectionListDataInner interface.
 */
export function instanceOfSqlV1ConnectionListDataInner(
  value: object,
): value is SqlV1ConnectionListDataInner {
  if (!("api_version" in value) || value["api_version"] === undefined) return false;
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("spec" in value) || value["spec"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  return true;
}

export function SqlV1ConnectionListDataInnerFromJSON(json: any): SqlV1ConnectionListDataInner {
  return SqlV1ConnectionListDataInnerFromJSONTyped(json, false);
}

export function SqlV1ConnectionListDataInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SqlV1ConnectionListDataInner {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"],
    kind: json["kind"],
    metadata: SqlV1ConnectionMetadataFromJSON(json["metadata"]),
    name: json["name"],
    spec: json["spec"],
    status: SqlV1ConnectionStatusFromJSON(json["status"]),
  };
}

export function SqlV1ConnectionListDataInnerToJSON(json: any): SqlV1ConnectionListDataInner {
  return SqlV1ConnectionListDataInnerToJSONTyped(json, false);
}

export function SqlV1ConnectionListDataInnerToJSONTyped(
  value?: Omit<SqlV1ConnectionListDataInner, "api_version" | "kind"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: SqlV1ConnectionMetadataToJSON(value["metadata"]),
    name: value["name"],
    spec: value["spec"],
    status: SqlV1ConnectionStatusToJSON(value["status"]),
  };
}
