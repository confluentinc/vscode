/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { SqlV1StatementResult } from "./SqlV1StatementResult";
import {
  SqlV1StatementResultFromJSON,
  SqlV1StatementResultFromJSONTyped,
  SqlV1StatementResultToJSON,
  SqlV1StatementResultToJSONTyped,
} from "./SqlV1StatementResult";
import type { SqlV1StatementStatus } from "./SqlV1StatementStatus";
import {
  SqlV1StatementStatusFromJSON,
  SqlV1StatementStatusFromJSONTyped,
  SqlV1StatementStatusToJSON,
  SqlV1StatementStatusToJSONTyped,
} from "./SqlV1StatementStatus";

/**
 *
 * @export
 * @interface UpdateSqlv1StatementRequest
 */
export interface UpdateSqlv1StatementRequest {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof UpdateSqlv1StatementRequest
   */
  readonly api_version?: UpdateSqlv1StatementRequestApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof UpdateSqlv1StatementRequest
   */
  readonly kind?: UpdateSqlv1StatementRequestKindEnum;
  /**
   *
   * @type {object}
   * @memberof UpdateSqlv1StatementRequest
   */
  metadata: object;
  /**
   * The user provided name of the resource, unique within this environment.
   * @type {string}
   * @memberof UpdateSqlv1StatementRequest
   */
  name: string;
  /**
   * The unique identifier for the organization.
   * @type {string}
   * @memberof UpdateSqlv1StatementRequest
   */
  organization_id?: string;
  /**
   * The unique identifier for the environment.
   * @type {string}
   * @memberof UpdateSqlv1StatementRequest
   */
  environment_id?: string;
  /**
   *
   * @type {object}
   * @memberof UpdateSqlv1StatementRequest
   */
  spec: object;
  /**
   *
   * @type {SqlV1StatementStatus}
   * @memberof UpdateSqlv1StatementRequest
   */
  status?: SqlV1StatementStatus;
  /**
   *
   * @type {SqlV1StatementResult}
   * @memberof UpdateSqlv1StatementRequest
   */
  result?: SqlV1StatementResult;
}

/**
 * @export
 */
export const UpdateSqlv1StatementRequestApiVersionEnum = {
  SqlV1: "sql/v1",
} as const;
export type UpdateSqlv1StatementRequestApiVersionEnum =
  (typeof UpdateSqlv1StatementRequestApiVersionEnum)[keyof typeof UpdateSqlv1StatementRequestApiVersionEnum];

/**
 * @export
 */
export const UpdateSqlv1StatementRequestKindEnum = {
  Statement: "Statement",
} as const;
export type UpdateSqlv1StatementRequestKindEnum =
  (typeof UpdateSqlv1StatementRequestKindEnum)[keyof typeof UpdateSqlv1StatementRequestKindEnum];

/**
 * Check if a given object implements the UpdateSqlv1StatementRequest interface.
 */
export function instanceOfUpdateSqlv1StatementRequest(
  value: object,
): value is UpdateSqlv1StatementRequest {
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("spec" in value) || value["spec"] === undefined) return false;
  return true;
}

export function UpdateSqlv1StatementRequestFromJSON(json: any): UpdateSqlv1StatementRequest {
  return UpdateSqlv1StatementRequestFromJSONTyped(json, false);
}

export function UpdateSqlv1StatementRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdateSqlv1StatementRequest {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"] == null ? undefined : json["api_version"],
    kind: json["kind"] == null ? undefined : json["kind"],
    metadata: json["metadata"],
    name: json["name"],
    organization_id: json["organization_id"] == null ? undefined : json["organization_id"],
    environment_id: json["environment_id"] == null ? undefined : json["environment_id"],
    spec: json["spec"],
    status: json["status"] == null ? undefined : SqlV1StatementStatusFromJSON(json["status"]),
    result: json["result"] == null ? undefined : SqlV1StatementResultFromJSON(json["result"]),
  };
}

export function UpdateSqlv1StatementRequestToJSON(json: any): UpdateSqlv1StatementRequest {
  return UpdateSqlv1StatementRequestToJSONTyped(json, false);
}

export function UpdateSqlv1StatementRequestToJSONTyped(
  value?: Omit<UpdateSqlv1StatementRequest, "api_version" | "kind"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: value["metadata"],
    name: value["name"],
    organization_id: value["organization_id"],
    environment_id: value["environment_id"],
    spec: value["spec"],
    status: SqlV1StatementStatusToJSON(value["status"]),
    result: SqlV1StatementResultToJSON(value["result"]),
  };
}
