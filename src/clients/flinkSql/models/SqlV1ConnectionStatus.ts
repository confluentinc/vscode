/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * The status of the Connection
 * @export
 * @interface SqlV1ConnectionStatus
 */
export interface SqlV1ConnectionStatus {
  /**
   * Describes the status of the connection:
   *
   * READY: The Connection is usable;
   *
   * UNREACHABLE: The Connection endpoint is unreachable;
   *
   * INVALID_AUTH: The Connection auth token is invalid;
   *
   * @type {string}
   * @memberof SqlV1ConnectionStatus
   */
  readonly phase: string;
  /**
   * Details about why connection transitioned into a given status.
   * @type {string}
   * @memberof SqlV1ConnectionStatus
   */
  readonly detail?: string;
}

/**
 * Check if a given object implements the SqlV1ConnectionStatus interface.
 */
export function instanceOfSqlV1ConnectionStatus(value: object): value is SqlV1ConnectionStatus {
  if (!("phase" in value) || value["phase"] === undefined) return false;
  return true;
}

export function SqlV1ConnectionStatusFromJSON(json: any): SqlV1ConnectionStatus {
  return SqlV1ConnectionStatusFromJSONTyped(json, false);
}

export function SqlV1ConnectionStatusFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SqlV1ConnectionStatus {
  if (json == null) {
    return json;
  }
  return {
    phase: json["phase"],
    detail: json["detail"] == null ? undefined : json["detail"],
  };
}

export function SqlV1ConnectionStatusToJSON(json: any): SqlV1ConnectionStatus {
  return SqlV1ConnectionStatusToJSONTyped(json, false);
}

export function SqlV1ConnectionStatusToJSONTyped(
  value?: Omit<SqlV1ConnectionStatus, "phase" | "detail"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {};
}
