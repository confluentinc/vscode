/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { SqlV1ConnectionSpecAuthData } from "./SqlV1ConnectionSpecAuthData";
import {
  SqlV1ConnectionSpecAuthDataFromJSON,
  SqlV1ConnectionSpecAuthDataFromJSONTyped,
  SqlV1ConnectionSpecAuthDataToJSON,
  SqlV1ConnectionSpecAuthDataToJSONTyped,
} from "./SqlV1ConnectionSpecAuthData";

/**
 * Encapsulates the model provider access details
 * @export
 * @interface SqlV1ConnectionSpec
 */
export interface SqlV1ConnectionSpec {
  /**
   * The type of this connection.
   * @type {string}
   * @memberof SqlV1ConnectionSpec
   */
  connection_type?: string;
  /**
   * The endpoint that is used to run model inferencing.
   * @type {string}
   * @memberof SqlV1ConnectionSpec
   */
  endpoint?: string;
  /**
   *
   * @type {SqlV1ConnectionSpecAuthData}
   * @memberof SqlV1ConnectionSpec
   */
  auth_data?: SqlV1ConnectionSpecAuthData;
}

/**
 * Check if a given object implements the SqlV1ConnectionSpec interface.
 */
export function instanceOfSqlV1ConnectionSpec(value: object): value is SqlV1ConnectionSpec {
  return true;
}

export function SqlV1ConnectionSpecFromJSON(json: any): SqlV1ConnectionSpec {
  return SqlV1ConnectionSpecFromJSONTyped(json, false);
}

export function SqlV1ConnectionSpecFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SqlV1ConnectionSpec {
  if (json == null) {
    return json;
  }
  return {
    connection_type: json["connection_type"] == null ? undefined : json["connection_type"],
    endpoint: json["endpoint"] == null ? undefined : json["endpoint"],
    auth_data:
      json["auth_data"] == null
        ? undefined
        : SqlV1ConnectionSpecAuthDataFromJSON(json["auth_data"]),
  };
}

export function SqlV1ConnectionSpecToJSON(json: any): SqlV1ConnectionSpec {
  return SqlV1ConnectionSpecToJSONTyped(json, false);
}

export function SqlV1ConnectionSpecToJSONTyped(
  value?: SqlV1ConnectionSpec | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    connection_type: value["connection_type"],
    endpoint: value["endpoint"],
    auth_data: SqlV1ConnectionSpecAuthDataToJSON(value["auth_data"]),
  };
}
