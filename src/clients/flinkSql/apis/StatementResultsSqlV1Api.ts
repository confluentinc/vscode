/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { Failure, GetSqlv1StatementResult200Response } from "../models/index";
import {
  FailureFromJSON,
  FailureToJSON,
  GetSqlv1StatementResult200ResponseFromJSON,
  GetSqlv1StatementResult200ResponseToJSON,
} from "../models/index";

export interface GetSqlv1StatementResultRequest {
  organization_id: string;
  environment_id: string;
  name: string;
  page_token?: string;
}

/**
 *
 */
export class StatementResultsSqlV1Api extends runtime.BaseAPI {
  /**
   * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)  Read Statement Result.
   * Read Statement Result
   */
  async getSqlv1StatementResultRaw(
    requestParameters: GetSqlv1StatementResultRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetSqlv1StatementResult200Response>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling getSqlv1StatementResult().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling getSqlv1StatementResult().',
      );
    }

    if (requestParameters["name"] == null) {
      throw new runtime.RequiredError(
        "name",
        'Required parameter "name" was null or undefined when calling getSqlv1StatementResult().',
      );
    }

    const queryParameters: any = {};

    if (requestParameters["page_token"] != null) {
      queryParameters["page_token"] = requestParameters["page_token"];
    }

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/statements/{name}/results`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          )
          .replace(`{${"name"}}`, encodeURIComponent(String(requestParameters["name"]))),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      GetSqlv1StatementResult200ResponseFromJSON(jsonValue),
    );
  }

  /**
   * [![General Availability](https://img.shields.io/badge/Lifecycle%20Stage-General%20Availability-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)  Read Statement Result.
   * Read Statement Result
   */
  async getSqlv1StatementResult(
    requestParameters: GetSqlv1StatementResultRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetSqlv1StatementResult200Response> {
    const response = await this.getSqlv1StatementResultRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
