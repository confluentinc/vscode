/* tslint:disable */
/* eslint-disable */
/**
 * SQL API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type {
  CreateSqlv1Connection201Response,
  CreateSqlv1ConnectionRequest,
  Failure,
  GetSqlv1Connection200Response,
  SqlV1ConnectionList,
  UpdateSqlv1ConnectionRequest,
} from "../models/index";
import {
  CreateSqlv1Connection201ResponseFromJSON,
  CreateSqlv1Connection201ResponseToJSON,
  CreateSqlv1ConnectionRequestFromJSON,
  CreateSqlv1ConnectionRequestToJSON,
  FailureFromJSON,
  FailureToJSON,
  GetSqlv1Connection200ResponseFromJSON,
  GetSqlv1Connection200ResponseToJSON,
  SqlV1ConnectionListFromJSON,
  SqlV1ConnectionListToJSON,
  UpdateSqlv1ConnectionRequestFromJSON,
  UpdateSqlv1ConnectionRequestToJSON,
} from "../models/index";

export interface CreateSqlv1ConnectionOperationRequest {
  organization_id: string;
  environment_id: string;
  CreateSqlv1ConnectionRequest?: CreateSqlv1ConnectionRequest;
}

export interface DeleteSqlv1ConnectionRequest {
  organization_id: string;
  environment_id: string;
  connection_name: string;
}

export interface GetSqlv1ConnectionRequest {
  organization_id: string;
  environment_id: string;
  connection_name: string;
}

export interface ListSqlv1ConnectionsRequest {
  organization_id: string;
  environment_id: string;
  spec_connection_type?: string;
  page_size?: number;
  page_token?: string;
}

export interface UpdateSqlv1ConnectionOperationRequest {
  organization_id: string;
  environment_id: string;
  connection_name: string;
  UpdateSqlv1ConnectionRequest?: UpdateSqlv1ConnectionRequest;
}

/**
 *
 */
export class ConnectionsSqlV1Api extends runtime.BaseAPI {
  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to create a Connection.
   * Create a Connection
   */
  async createSqlv1ConnectionRaw(
    requestParameters: CreateSqlv1ConnectionOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<CreateSqlv1Connection201Response>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling createSqlv1Connection().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling createSqlv1Connection().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/connections`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          ),
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: CreateSqlv1ConnectionRequestToJSON(requestParameters["CreateSqlv1ConnectionRequest"]),
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      CreateSqlv1Connection201ResponseFromJSON(jsonValue),
    );
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to create a Connection.
   * Create a Connection
   */
  async createSqlv1Connection(
    requestParameters: CreateSqlv1ConnectionOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<CreateSqlv1Connection201Response> {
    const response = await this.createSqlv1ConnectionRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to delete a statement.
   * Delete a Connection
   */
  async deleteSqlv1ConnectionRaw(
    requestParameters: DeleteSqlv1ConnectionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling deleteSqlv1Connection().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling deleteSqlv1Connection().',
      );
    }

    if (requestParameters["connection_name"] == null) {
      throw new runtime.RequiredError(
        "connection_name",
        'Required parameter "connection_name" was null or undefined when calling deleteSqlv1Connection().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/connections/{connection_name}`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          )
          .replace(
            `{${"connection_name"}}`,
            encodeURIComponent(String(requestParameters["connection_name"])),
          ),
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to delete a statement.
   * Delete a Connection
   */
  async deleteSqlv1Connection(
    requestParameters: DeleteSqlv1ConnectionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.deleteSqlv1ConnectionRaw(requestParameters, initOverrides);
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to read a Connection.
   * Read a Connection
   */
  async getSqlv1ConnectionRaw(
    requestParameters: GetSqlv1ConnectionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<GetSqlv1Connection200Response>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling getSqlv1Connection().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling getSqlv1Connection().',
      );
    }

    if (requestParameters["connection_name"] == null) {
      throw new runtime.RequiredError(
        "connection_name",
        'Required parameter "connection_name" was null or undefined when calling getSqlv1Connection().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/connections/{connection_name}`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          )
          .replace(
            `{${"connection_name"}}`,
            encodeURIComponent(String(requestParameters["connection_name"])),
          ),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      GetSqlv1Connection200ResponseFromJSON(jsonValue),
    );
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to read a Connection.
   * Read a Connection
   */
  async getSqlv1Connection(
    requestParameters: GetSqlv1ConnectionRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<GetSqlv1Connection200Response> {
    const response = await this.getSqlv1ConnectionRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Retrieve a sorted, filtered and paginated list of all Connections.
   * List of Connections
   */
  async listSqlv1ConnectionsRaw(
    requestParameters: ListSqlv1ConnectionsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SqlV1ConnectionList>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling listSqlv1Connections().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling listSqlv1Connections().',
      );
    }

    const queryParameters: any = {};

    if (requestParameters["spec_connection_type"] != null) {
      queryParameters["spec.connection_type"] = requestParameters["spec_connection_type"];
    }

    if (requestParameters["page_size"] != null) {
      queryParameters["page_size"] = requestParameters["page_size"];
    }

    if (requestParameters["page_token"] != null) {
      queryParameters["page_token"] = requestParameters["page_token"];
    }

    const headerParameters: runtime.HTTPHeaders = {};

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/connections`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          ),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      SqlV1ConnectionListFromJSON(jsonValue),
    );
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Retrieve a sorted, filtered and paginated list of all Connections.
   * List of Connections
   */
  async listSqlv1Connections(
    requestParameters: ListSqlv1ConnectionsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SqlV1ConnectionList> {
    const response = await this.listSqlv1ConnectionsRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to update a connection.
   * Update a Connection
   */
  async updateSqlv1ConnectionRaw(
    requestParameters: UpdateSqlv1ConnectionOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<void>> {
    if (requestParameters["organization_id"] == null) {
      throw new runtime.RequiredError(
        "organization_id",
        'Required parameter "organization_id" was null or undefined when calling updateSqlv1Connection().',
      );
    }

    if (requestParameters["environment_id"] == null) {
      throw new runtime.RequiredError(
        "environment_id",
        'Required parameter "environment_id" was null or undefined when calling updateSqlv1Connection().',
      );
    }

    if (requestParameters["connection_name"] == null) {
      throw new runtime.RequiredError(
        "connection_name",
        'Required parameter "connection_name" was null or undefined when calling updateSqlv1Connection().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/sql/v1/organizations/{organization_id}/environments/{environment_id}/connections/{connection_name}`
          .replace(
            `{${"organization_id"}}`,
            encodeURIComponent(String(requestParameters["organization_id"])),
          )
          .replace(
            `{${"environment_id"}}`,
            encodeURIComponent(String(requestParameters["environment_id"])),
          )
          .replace(
            `{${"connection_name"}}`,
            encodeURIComponent(String(requestParameters["connection_name"])),
          ),
        method: "PUT",
        headers: headerParameters,
        query: queryParameters,
        body: UpdateSqlv1ConnectionRequestToJSON(requestParameters["UpdateSqlv1ConnectionRequest"]),
      },
      initOverrides,
    );

    return new runtime.VoidApiResponse(response);
  }

  /**
   * [![Preview](https://img.shields.io/badge/Lifecycle%20Stage-Preview-%2300afba)](#section/Versioning/API-Lifecycle-Policy)  Make a request to update a connection.
   * Update a Connection
   */
  async updateSqlv1Connection(
    requestParameters: UpdateSqlv1ConnectionOperationRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<void> {
    await this.updateSqlv1ConnectionRaw(requestParameters, initOverrides);
  }
}
