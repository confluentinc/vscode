/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface GenerationDTO
 */
export interface GenerationDTO {
  /**
   *
   * @type {string}
   * @memberof GenerationDTO
   */
  generator: GenerationDTOGeneratorEnum;
  /**
   *
   * @type {Array<object>}
   * @memberof GenerationDTO
   */
  arguments?: Array<object>;
}

/**
 * @export
 * @enum {string}
 */
export enum GenerationDTOGeneratorEnum {
  LocationState = "Location.state",
  LocationCountry = "Location.country",
  LocationPostcode = "Location.postcode",
  LocationCity = "Location.city",
  LocationStreetAddress = "Location.street-address",
  LocationFullAddress = "Location.full-address",
  LocationLongitude = "Location.longitude",
  LocationLatitude = "Location.latitude",
  DatePast = "Date.past",
  DateTimestampUtc = "Date.timestamp-utc",
  DateNow = "Date.now",
  DateFuture = "Date.future",
  NumberDigits = "Number.digits",
  NumberIteratingInteger = "Number.iterating-integer",
  NumberIteratingLong = "Number.iterating-long",
  NumberNumberSelect = "Number.number-select",
  NumberNumberBetween = "Number.number-between",
  NumberCastNumber = "Number.cast-number",
  PersonFirstName = "Person.first-name",
  PersonLastName = "Person.last-name",
  PersonFullName = "Person.full-name",
  PersonSsn = "Person.ssn",
  InternetEmailAddress = "Internet.email-address",
  InternetCustomEmailAddress = "Internet.custom-email-address",
  InternetIpv4Address = "Internet.ipv4-address",
  InternetMacAddress = "Internet.mac-address",
  InternetPassword = "Internet.password",
  InternetWebDomain = "Internet.web-domain",
  InternetUserAgent = "Internet.user-agent",
  InternetUsername = "Internet.username",
  VehicleVin = "Vehicle.vin",
  VehicleManufacturer = "Vehicle.manufacturer",
  VehicleLicensePlate = "Vehicle.license-plate",
  DeviceManufacturer = "Device.manufacturer",
  DeviceModelName = "Device.model-name",
  DevicePlatform = "Device.platform",
  CommerceBarcodeEan8 = "Commerce.barcode-ean8",
  CommerceProductName = "Commerce.product-name",
  CommerceBrand = "Commerce.brand",
  CommerceVendor = "Commerce.vendor",
  CommerceMaterial = "Commerce.material",
  CompanyName = "Company.name",
  CompanyIndustry = "Company.industry",
  CompanyProfession = "Company.profession",
  PhoneExtension = "Phone.extension",
  PhoneNumber = "Phone.number",
  FinanceCreditCard = "Finance.credit-card",
  FinanceIban = "Finance.iban",
  FinanceStockTicker = "Finance.stock-ticker",
  FinanceCurrencyCode = "Finance.currency-code",
  FinanceCurrencyName = "Finance.currency-name",
  FinanceBic = "Finance.bic",
  HealthcareMedication = "Healthcare.medication",
  HealthcareDisease = "Healthcare.disease",
  HealthcareDiagnosisCode = "Healthcare.diagnosis-code",
  HealthcareSymptom = "Healthcare.symptom",
  HealthcareHospital = "Healthcare.hospital",
  HealthcareProfession = "Healthcare.profession",
  StructArray = "Struct.array",
  StructNestedRecord = "Struct.nested-record",
  ReferenceExpression = "Reference.expression",
  ReferenceCache = "Reference.cache",
  ReferenceCacheByKey = "Reference.cache-by-key",
  ReferencePreviousStateByKey = "Reference.previous-state-by-key",
  ReferenceLinkedTableColumn = "Reference.linked-table-column",
  ReferenceTableCell = "Reference.table-cell",
  StringSelect = "String.select",
  StringUuid = "String.uuid",
  StringToString = "String.to-string",
  StringSelectText = "String.select-text",
  StringSelectWeightedText = "String.select-weighted-text",
  BooleanPercentTrue = "Boolean.percent-true",
  BooleanRegex = "Boolean.regex",
  ConditionalExpressionIfElse = "Conditional.expression-if-else",
  ConditionalGeneratorIfElse = "Conditional.generator-if-else",
  UtilCustomVariable = "Util.custom-variable",
}

/**
 * Check if a given object implements the GenerationDTO interface.
 */
export function instanceOfGenerationDTO(value: object): value is GenerationDTO {
  if (!("generator" in value) || value["generator"] === undefined) return false;
  return true;
}

export function GenerationDTOFromJSON(json: any): GenerationDTO {
  return GenerationDTOFromJSONTyped(json, false);
}

export function GenerationDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerationDTO {
  if (json == null) {
    return json;
  }
  return {
    generator: json["generator"],
    arguments: json["arguments"] == null ? undefined : json["arguments"],
  };
}

export function GenerationDTOToJSON(json: any): GenerationDTO {
  return GenerationDTOToJSONTyped(json, false);
}

export function GenerationDTOToJSONTyped(
  value?: GenerationDTO | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    generator: value["generator"],
    arguments: value["arguments"],
  };
}
