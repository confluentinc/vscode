/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ExpectedArgumentDetails
 */
export interface ExpectedArgumentDetails {
  /**
   *
   * @type {string}
   * @memberof ExpectedArgumentDetails
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ExpectedArgumentDetails
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ExpectedArgumentDetails
   */
  type?: string;
  /**
   *
   * @type {Array<object>}
   * @memberof ExpectedArgumentDetails
   */
  options?: Array<object>;
}

/**
 * Check if a given object implements the ExpectedArgumentDetails interface.
 */
export function instanceOfExpectedArgumentDetails(value: object): value is ExpectedArgumentDetails {
  return true;
}

export function ExpectedArgumentDetailsFromJSON(json: any): ExpectedArgumentDetails {
  return ExpectedArgumentDetailsFromJSONTyped(json, false);
}

export function ExpectedArgumentDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ExpectedArgumentDetails {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"] == null ? undefined : json["name"],
    description: json["description"] == null ? undefined : json["description"],
    type: json["type"] == null ? undefined : json["type"],
    options: json["options"] == null ? undefined : json["options"],
  };
}

export function ExpectedArgumentDetailsToJSON(json: any): ExpectedArgumentDetails {
  return ExpectedArgumentDetailsToJSONTyped(json, false);
}

export function ExpectedArgumentDetailsToJSONTyped(
  value?: ExpectedArgumentDetails | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    description: value["description"],
    type: value["type"],
    options: value["options"],
  };
}
