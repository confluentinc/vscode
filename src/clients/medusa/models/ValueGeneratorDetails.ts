/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ExpectedArgumentDetails } from "./ExpectedArgumentDetails";
import {
  ExpectedArgumentDetailsFromJSON,
  ExpectedArgumentDetailsFromJSONTyped,
  ExpectedArgumentDetailsToJSON,
  ExpectedArgumentDetailsToJSONTyped,
} from "./ExpectedArgumentDetails";

/**
 *
 * @export
 * @interface ValueGeneratorDetails
 */
export interface ValueGeneratorDetails {
  /**
   *
   * @type {string}
   * @memberof ValueGeneratorDetails
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ValueGeneratorDetails
   */
  category?: ValueGeneratorDetailsCategoryEnum;
  /**
   *
   * @type {string}
   * @memberof ValueGeneratorDetails
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ValueGeneratorDetails
   */
  return_type?: string;
  /**
   *
   * @type {Array<ExpectedArgumentDetails>}
   * @memberof ValueGeneratorDetails
   */
  arguments?: Array<ExpectedArgumentDetails>;
}

/**
 * @export
 * @enum {string}
 */
export enum ValueGeneratorDetailsCategoryEnum {
  Location = "Location",
  Boolean = "Boolean",
  Commerce = "Commerce",
  Company = "Company",
  Conditional = "Conditional",
  Date = "Date",
  Device = "Device",
  Finance = "Finance",
  Healthcare = "Healthcare",
  Internet = "Internet",
  Number = "Number",
  Person = "Person",
  Phone = "Phone",
  String = "String",
  Struct = "Struct",
  Reference = "Reference",
  Util = "Util",
  Table = "Table",
  Vehicle = "Vehicle",
}

/**
 * Check if a given object implements the ValueGeneratorDetails interface.
 */
export function instanceOfValueGeneratorDetails(value: object): value is ValueGeneratorDetails {
  return true;
}

export function ValueGeneratorDetailsFromJSON(json: any): ValueGeneratorDetails {
  return ValueGeneratorDetailsFromJSONTyped(json, false);
}

export function ValueGeneratorDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ValueGeneratorDetails {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"] == null ? undefined : json["name"],
    category: json["category"] == null ? undefined : json["category"],
    description: json["description"] == null ? undefined : json["description"],
    return_type: json["return_type"] == null ? undefined : json["return_type"],
    arguments:
      json["arguments"] == null
        ? undefined
        : (json["arguments"] as Array<any>).map(ExpectedArgumentDetailsFromJSON),
  };
}

export function ValueGeneratorDetailsToJSON(json: any): ValueGeneratorDetails {
  return ValueGeneratorDetailsToJSONTyped(json, false);
}

export function ValueGeneratorDetailsToJSONTyped(
  value?: ValueGeneratorDetails | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    category: value["category"],
    description: value["description"],
    return_type: value["return_type"],
    arguments:
      value["arguments"] == null
        ? undefined
        : (value["arguments"] as Array<any>).map(ExpectedArgumentDetailsToJSON),
  };
}
