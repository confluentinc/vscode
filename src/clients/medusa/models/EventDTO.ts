/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TableLinkDTO } from "./TableLinkDTO";
import {
  TableLinkDTOFromJSON,
  TableLinkDTOFromJSONTyped,
  TableLinkDTOToJSON,
  TableLinkDTOToJSONTyped,
} from "./TableLinkDTO";
import type { EventThrottlerDTO } from "./EventThrottlerDTO";
import {
  EventThrottlerDTOFromJSON,
  EventThrottlerDTOFromJSONTyped,
  EventThrottlerDTOToJSON,
  EventThrottlerDTOToJSONTyped,
} from "./EventThrottlerDTO";
import type { FieldDTO } from "./FieldDTO";
import {
  FieldDTOFromJSON,
  FieldDTOFromJSONTyped,
  FieldDTOToJSON,
  FieldDTOToJSONTyped,
} from "./FieldDTO";

/**
 *
 * @export
 * @interface EventDTO
 */
export interface EventDTO {
  /**
   *
   * @type {EventThrottlerDTO}
   * @memberof EventDTO
   */
  event_throttler?: EventThrottlerDTO;
  /**
   *
   * @type {TableLinkDTO}
   * @memberof EventDTO
   */
  table_link?: TableLinkDTO;
  /**
   *
   * @type {string}
   * @memberof EventDTO
   */
  key_field_name: string;
  /**
   *
   * @type {string}
   * @memberof EventDTO
   */
  event_name: string;
  /**
   *
   * @type {Array<FieldDTO>}
   * @memberof EventDTO
   */
  fields: Array<FieldDTO>;
}

/**
 * Check if a given object implements the EventDTO interface.
 */
export function instanceOfEventDTO(value: object): value is EventDTO {
  if (!("key_field_name" in value) || value["key_field_name"] === undefined) return false;
  if (!("event_name" in value) || value["event_name"] === undefined) return false;
  if (!("fields" in value) || value["fields"] === undefined) return false;
  return true;
}

export function EventDTOFromJSON(json: any): EventDTO {
  return EventDTOFromJSONTyped(json, false);
}

export function EventDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventDTO {
  if (json == null) {
    return json;
  }
  return {
    event_throttler:
      json["event_throttler"] == null
        ? undefined
        : EventThrottlerDTOFromJSON(json["event_throttler"]),
    table_link: json["table_link"] == null ? undefined : TableLinkDTOFromJSON(json["table_link"]),
    key_field_name: json["key_field_name"],
    event_name: json["event_name"],
    fields: (json["fields"] as Array<any>).map(FieldDTOFromJSON),
  };
}

export function EventDTOToJSON(json: any): EventDTO {
  return EventDTOToJSONTyped(json, false);
}

export function EventDTOToJSONTyped(
  value?: EventDTO | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    event_throttler: EventThrottlerDTOToJSON(value["event_throttler"]),
    table_link: TableLinkDTOToJSON(value["table_link"]),
    key_field_name: value["key_field_name"],
    event_name: value["event_name"],
    fields: (value["fields"] as Array<any>).map(FieldDTOToJSON),
  };
}
