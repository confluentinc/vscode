/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ExpectedArgumentDetails } from "./ExpectedArgumentDetails";
import {
  ExpectedArgumentDetailsFromJSON,
  ExpectedArgumentDetailsFromJSONTyped,
  ExpectedArgumentDetailsToJSON,
  ExpectedArgumentDetailsToJSONTyped,
} from "./ExpectedArgumentDetails";

/**
 *
 * @export
 * @interface EventThrottlerDetails
 */
export interface EventThrottlerDetails {
  /**
   *
   * @type {string}
   * @memberof EventThrottlerDetails
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof EventThrottlerDetails
   */
  description?: string;
  /**
   *
   * @type {Array<ExpectedArgumentDetails>}
   * @memberof EventThrottlerDetails
   */
  arguments?: Array<ExpectedArgumentDetails>;
}

/**
 * Check if a given object implements the EventThrottlerDetails interface.
 */
export function instanceOfEventThrottlerDetails(value: object): value is EventThrottlerDetails {
  return true;
}

export function EventThrottlerDetailsFromJSON(json: any): EventThrottlerDetails {
  return EventThrottlerDetailsFromJSONTyped(json, false);
}

export function EventThrottlerDetailsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): EventThrottlerDetails {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"] == null ? undefined : json["name"],
    description: json["description"] == null ? undefined : json["description"],
    arguments:
      json["arguments"] == null
        ? undefined
        : (json["arguments"] as Array<any>).map(ExpectedArgumentDetailsFromJSON),
  };
}

export function EventThrottlerDetailsToJSON(json: any): EventThrottlerDetails {
  return EventThrottlerDetailsToJSONTyped(json, false);
}

export function EventThrottlerDetailsToJSONTyped(
  value?: EventThrottlerDetails | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    description: value["description"],
    arguments:
      value["arguments"] == null
        ? undefined
        : (value["arguments"] as Array<any>).map(ExpectedArgumentDetailsToJSON),
  };
}
