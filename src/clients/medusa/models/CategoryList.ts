/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CollectionMetadata } from "./CollectionMetadata";
import {
  CollectionMetadataFromJSON,
  CollectionMetadataFromJSONTyped,
  CollectionMetadataToJSON,
  CollectionMetadataToJSONTyped,
} from "./CollectionMetadata";

/**
 *
 * @export
 * @interface CategoryList
 */
export interface CategoryList {
  /**
   *
   * @type {CollectionMetadata}
   * @memberof CategoryList
   */
  metadata?: CollectionMetadata;
  /**
   *
   * @type {string}
   * @memberof CategoryList
   */
  api_version?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof CategoryList
   */
  data?: Array<CategoryListDataEnum>;
  /**
   *
   * @type {string}
   * @memberof CategoryList
   */
  kind?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum CategoryListDataEnum {
  Location = "Location",
  Boolean = "Boolean",
  Commerce = "Commerce",
  Company = "Company",
  Conditional = "Conditional",
  Date = "Date",
  Device = "Device",
  Finance = "Finance",
  Healthcare = "Healthcare",
  Internet = "Internet",
  Number = "Number",
  Person = "Person",
  Phone = "Phone",
  String = "String",
  Struct = "Struct",
  Reference = "Reference",
  Util = "Util",
  Table = "Table",
  Vehicle = "Vehicle",
}

/**
 * Check if a given object implements the CategoryList interface.
 */
export function instanceOfCategoryList(value: object): value is CategoryList {
  return true;
}

export function CategoryListFromJSON(json: any): CategoryList {
  return CategoryListFromJSONTyped(json, false);
}

export function CategoryListFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryList {
  if (json == null) {
    return json;
  }
  return {
    metadata: json["metadata"] == null ? undefined : CollectionMetadataFromJSON(json["metadata"]),
    api_version: json["api_version"] == null ? undefined : json["api_version"],
    data: json["data"] == null ? undefined : json["data"],
    kind: json["kind"] == null ? undefined : json["kind"],
  };
}

export function CategoryListToJSON(json: any): CategoryList {
  return CategoryListToJSONTyped(json, false);
}

export function CategoryListToJSONTyped(
  value?: CategoryList | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: CollectionMetadataToJSON(value["metadata"]),
    api_version: value["api_version"],
    data: value["data"],
    kind: value["kind"],
  };
}
