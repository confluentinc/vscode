/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CollectionMetadata } from "./CollectionMetadata";
import {
  CollectionMetadataFromJSON,
  CollectionMetadataFromJSONTyped,
  CollectionMetadataToJSON,
  CollectionMetadataToJSONTyped,
} from "./CollectionMetadata";
import type { EventMessage } from "./EventMessage";
import {
  EventMessageFromJSON,
  EventMessageFromJSONTyped,
  EventMessageToJSON,
  EventMessageToJSONTyped,
} from "./EventMessage";

/**
 *
 * @export
 * @interface EventMessageList
 */
export interface EventMessageList {
  /**
   *
   * @type {CollectionMetadata}
   * @memberof EventMessageList
   */
  metadata?: CollectionMetadata;
  /**
   *
   * @type {string}
   * @memberof EventMessageList
   */
  api_version?: string;
  /**
   *
   * @type {Array<EventMessage>}
   * @memberof EventMessageList
   */
  data?: Array<EventMessage>;
  /**
   *
   * @type {string}
   * @memberof EventMessageList
   */
  kind?: string;
}

/**
 * Check if a given object implements the EventMessageList interface.
 */
export function instanceOfEventMessageList(value: object): value is EventMessageList {
  return true;
}

export function EventMessageListFromJSON(json: any): EventMessageList {
  return EventMessageListFromJSONTyped(json, false);
}

export function EventMessageListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): EventMessageList {
  if (json == null) {
    return json;
  }
  return {
    metadata: json["metadata"] == null ? undefined : CollectionMetadataFromJSON(json["metadata"]),
    api_version: json["api_version"] == null ? undefined : json["api_version"],
    data: json["data"] == null ? undefined : (json["data"] as Array<any>).map(EventMessageFromJSON),
    kind: json["kind"] == null ? undefined : json["kind"],
  };
}

export function EventMessageListToJSON(json: any): EventMessageList {
  return EventMessageListToJSONTyped(json, false);
}

export function EventMessageListToJSONTyped(
  value?: EventMessageList | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: CollectionMetadataToJSON(value["metadata"]),
    api_version: value["api_version"],
    data: value["data"] == null ? undefined : (value["data"] as Array<any>).map(EventMessageToJSON),
    kind: value["kind"],
  };
}
