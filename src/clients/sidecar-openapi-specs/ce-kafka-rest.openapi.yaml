# openapi.yaml
---
openapi: 3.0.0
info:
  title: REST Admin API
  version: 3.0.0
  contact:
    name: Kafka REST Team
  x-api-id: 499e3476-71e0-4d6f-b4f9-6776cec6df27
  x-api-group: v3
  x-audience: external-public
  x-tag-group: Kafka API (%s)

servers:
  - url: https://pkc-00000.region.provider.confluent.cloud
    x-audience: business-unit-internal
    description:
      Confluent Cloud REST Endpoint. For example https://pkc-00000.region.provider.confluent.cloud

x-tagGroups: []
paths:
  /kafka/v3/clusters/{cluster_id}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: Get Cluster
      operationId: getKafkaCluster
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the Kafka cluster with the specified ``cluster_id``.
      tags:
        - Cluster (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetClusterResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/acls:batch:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    post:
      summary: Batch Create ACLs
      operationId: batchCreateKafkaAcls
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Create ACLs.
      tags:
        - ACL (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/BatchCreateAclRequest"
      responses:
        "201":
          description: Created
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_CreateAcls"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/acls:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List ACLs
      operationId: getKafkaAcls
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return a list of ACLs that match the search criteria.
      tags:
        - ACL (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/AclResourceType"
        - $ref: "#/components/parameters/AclResourceName"
        - $ref: "#/components/parameters/AclPatternType"
        - $ref: "#/components/parameters/AclPrincipal"
        - $ref: "#/components/parameters/AclHost"
        - $ref: "#/components/parameters/AclOperation"
        - $ref: "#/components/parameters/AclPermission"
      responses:
        "200":
          $ref: "#/components/responses/SearchAclsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    post:
      summary: Create an ACL
      operationId: createKafkaAcls
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Create an ACL.
      tags:
        - ACL (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/CreateAclRequest"
      responses:
        "201":
          description: Created
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_CreateAcls"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Delete ACLs
      operationId: deleteKafkaAcls
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Delete the ACLs that match the search criteria.
      tags:
        - ACL (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/AclResourceTypeRequired"
        - $ref: "#/components/parameters/AclResourceName"
        - $ref: "#/components/parameters/AclPatternTypeRequired"
        - $ref: "#/components/parameters/AclPrincipal"
        - $ref: "#/components/parameters/AclHost"
        - $ref: "#/components/parameters/AclOperationRequired"
        - $ref: "#/components/parameters/AclPermissionRequired"
      responses:
        "200":
          $ref: "#/components/responses/DeleteAclsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_DeleteAcls"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/broker-configs:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List Dynamic Broker Configs
      operationId: listKafkaClusterConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return a list of dynamic cluster-wide broker configuration parameters for the specified Kafka
        cluster. Returns an empty list if there are no dynamic cluster-wide broker configuration parameters.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListClusterConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/broker-configs:alter:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    post:
      summary: Batch Alter Dynamic Broker Configs
      operationId: updateKafkaClusterConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Update or delete a set of dynamic cluster-wide broker configuration parameters.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterClusterConfigBatchRequest"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/broker-configs/{name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConfigName"

    get:
      summary: Get Dynamic Broker Config
      operationId: getKafkaClusterConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the dynamic cluster-wide broker configuration parameter specified by ``name``.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetClusterConfigResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    put:
      summary: Update Dynamic Broker Config
      operationId: updateKafkaClusterConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Update the dynamic cluster-wide broker configuration parameter specified by ``name``.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/UpdateClusterConfigRequest"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Reset Dynamic Broker Config
      operationId: deleteKafkaClusterConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Reset the configuration parameter specified by ``name`` to its
        default value by deleting a dynamic cluster-wide configuration.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List Consumer Groups
      operationId: listKafkaConsumerGroups
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the list of consumer groups that belong to the specified
        Kafka cluster.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListConsumerGroupsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"

    get:
      summary: Get Consumer Group
      operationId: getKafkaConsumerGroup
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the consumer group specified by the ``consumer_group_id``.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetConsumerGroupResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"

    get:
      summary: List Consumers
      operationId: listKafkaConsumers
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return a list of consumers that belong to the specified consumer
        group.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListConsumersResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}/lag-summary:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"

    get:
      summary: Get Consumer Group Lag Summary
      operationId: getKafkaConsumerGroupLagSummary
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Available in dedicated clusters only](https://img.shields.io/badge/-Available%20in%20dedicated%20clusters%20only-%23bc8540)](https://docs.confluent.io/cloud/current/clusters/cluster-types.html#dedicated-cluster)

        Return the maximum and total lag of the consumers belonging to the
        specified consumer group.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetConsumerGroupLagSummaryResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}/lags:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"

    get:
      summary: List Consumer Lags
      operationId: listKafkaConsumerLags
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Available in dedicated clusters only](https://img.shields.io/badge/-Available%20in%20dedicated%20clusters%20only-%23bc8540)](https://docs.confluent.io/cloud/current/clusters/cluster-types.html#dedicated-cluster)

        Return a list of consumer lags of the consumers belonging to the
        specified consumer group.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListConsumerLagsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}/lags/{topic_name}/partitions/{partition_id}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"
      - $ref: "#/components/parameters/TopicName"
      - $ref: "#/components/parameters/PartitionId"

    get:
      summary: Get Consumer Lag
      operationId: getKafkaConsumerLag
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy) [![Available in dedicated clusters only](https://img.shields.io/badge/-Available%20in%20dedicated%20clusters%20only-%23bc8540)](https://docs.confluent.io/cloud/current/clusters/cluster-types.html#dedicated-cluster)

        Return the consumer lag on a partition with the given `partition_id`.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetConsumerLagResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/consumer-groups/{consumer_group_id}/consumers/{consumer_id}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/ConsumerGroupId"
      - $ref: "#/components/parameters/ConsumerId"

    get:
      summary: Get Consumer
      operationId: getKafkaConsumer
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the consumer specified by the ``consumer_id``.
      tags:
        - Consumer Group (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetConsumerResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List Topics
      operationId: listKafkaTopics
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the list of topics that belong to the specified Kafka cluster.
      tags:
        - Topic (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/IncludeAuthorizedOperationsCamelCase"
      responses:
        "200":
          $ref: "#/components/responses/ListTopicsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    post:
      summary: Create Topic
      operationId: createKafkaTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Create a topic.
        Also supports a dry-run mode that only validates whether the topic creation would succeed
        if the ``validate_only`` request property is explicitly specified and set to true. Note that
        when dry-run mode is being used the response status would be 200 OK instead of 201 Created.
      tags:
        - Topic (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/CreateTopicRequest"
      responses:
        # returned when dry-run mode is being used and a topic has not been created
        "200":
          $ref: "#/components/responses/CreateTopicResponse"
        # returned in regular mode when a topic has been created
        "201":
          $ref: "#/components/responses/CreateTopicResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_CreateTopic"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    get:
      summary: Get Topic
      operationId: getKafkaTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the topic with the given `topic_name`.
      tags:
        - Topic (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/IncludeAuthorizedOperations"
      responses:
        "200":
          $ref: "#/components/responses/GetTopicResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    patch:
      summary: Update Partition Count
      operationId: updatePartitionCountKafkaTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Increase the number of partitions for a topic.
      tags:
        - Topic (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePartitionCountRequestData"
        # $ref: '#/components/requestBodies/UpdatePartitionCountRequest'
      responses:
        "200":
          $ref: "#/components/responses/GetTopicResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_UpdatePartitionCountTopic"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Delete Topic
      operationId: deleteKafkaTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Delete the topic with the given `topic_name`.
      tags:
        - Topic (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/configs:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    get:
      summary: List Topic Configs
      operationId: listKafkaTopicConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the list of configuration parameters that belong to the specified topic.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListTopicConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/configs:alter:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    post:
      summary: Batch Alter Topic Configs
      operationId: updateKafkaTopicConfigBatch
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Update or delete a set of topic configuration parameters.
        Also supports a dry-run mode that only validates whether the operation would succeed if the
        ``validate_only`` request property is explicitly specified and set to true.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterTopicConfigBatchRequest"
      responses:
        # returned in both regular and dry-run modes
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/configs/{name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"
      - $ref: "#/components/parameters/ConfigName"

    get:
      summary: Get Topic Config
      operationId: getKafkaTopicConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the configuration parameter with the given `name`.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetTopicConfigResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    put:
      summary: Update Topic Config
      operationId: updateKafkaTopicConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Update the configuration parameter with given `name`.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/UpdateTopicConfigRequest"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Reset Topic Config
      operationId: deleteKafkaTopicConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Reset the configuration parameter with given `name` to its default value.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    get:
      summary: List Partitions
      operationId: listKafkaPartitions
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the list of partitions that belong to the specified topic.
      tags:
        - Partition (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListPartitionsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/partitions/{partition_id}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"
      - $ref: "#/components/parameters/PartitionId"

    get:
      summary: Get Partition
      operationId: getKafkaPartition
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the partition with the given `partition_id`.
      tags:
        - Partition (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetPartitionResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/-/configs:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List All Topic Configs
      operationId: listKafkaAllTopicConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Return the list of configuration parameters for all topics hosted by the specified
        cluster.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListTopicConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/records:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    post:
      summary: Produce Records
      operationId: produceRecord
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Produce records to the given topic, returning delivery reports for each
        record produced. This API can be used in streaming mode by setting
        "Transfer-Encoding: chunked" header. For as long as the connection is
        kept open, the server will keep accepting records. Records are streamed
        to and from the server as Concatenated JSON. For each record sent to the
        server, the server will asynchronously send back a delivery report, in
        the same order, each with its own error_code. An error_code of 200
        indicates success. The HTTP status code will be HTTP 200 OK as long as
        the connection is successfully established. To identify records that
        have encountered an error, check the error_code of each delivery report.

        Note that the cluster_id is validated only when running in Confluent Cloud.

        This API currently does not support Schema Registry integration. Sending
        schemas is not supported. Only BINARY, JSON, and STRING formats are
        supported.

      tags:
        - Records (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/ProduceRequest"
      responses:
        "200":
          $ref: "#/components/responses/ProduceResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse_ProduceRecords"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "403":
          $ref: "#/components/responses/ForbiddenErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "413":
          $ref: "#/components/responses/RequestEntityTooLargeErrorResponse"
        "415":
          $ref: "#/components/responses/UnsupportedMediaTypeErrorResponse"
        "422":
          $ref: "#/components/responses/UnprocessableEntity_ProduceRecord"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List all cluster links in the dest cluster
      operationId: listKafkaLinks
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        ``link_id`` in ``ListLinksResponseData`` is deprecated and may be removed in a future release. Use the new ``cluster_link_id`` instead.
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListLinksResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    post:
      summary: Create a cluster link
      operationId: createKafkaLink
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Cluster link creation requires source cluster security configurations in
        the configs JSON section of the data request payload.
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/QueryParamLinkName"
        - $ref: "#/components/parameters/ValidateOnly"
        - $ref: "#/components/parameters/ValidateLink"
      requestBody:
        $ref: "#/components/requestBodies/CreateLinkRequest"
      responses:
        "204":
          $ref: "#/components/responses/NoContentResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"

    get:
      summary: Describe the cluster link
      operationId: getKafkaLink
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        ``link_id`` in ``ListLinksResponseData`` is deprecated and may be removed in a future release. Use the new ``cluster_link_id`` instead.
      tags:
        - Cluster Linking (v3)
      parameters:
        - $ref: "#/components/parameters/IncludeTasks"
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetLinkResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Delete the cluster link
      operationId: deleteKafkaLink
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/Force"
        - $ref: "#/components/parameters/ValidateOnly"
      responses:
        "200":
          $ref: "#/components/responses/NoContentResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/topics/{topic_name}/default-configs:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/TopicName"

    get:
      summary: List New Topic Default Configs
      operationId: listKafkaDefaultTopicConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        List the default configuration parameters used if the topic were to be newly created.
      tags:
        - Configs (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListTopicConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "404":
          $ref: "#/components/responses/NotFoundErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/configs:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"

    get:
      summary: List all configs of the cluster link
      operationId: listKafkaLinkConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/ListLinkConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/configs/{config_name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/LinkConfigName"

    get:
      summary: Describe the config under the cluster link
      operationId: getKafkaLinkConfigs
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/GetLinkConfigsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    put:
      summary: Alter the config under the cluster link
      operationId: updateKafkaLinkConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/UpdateLinkConfigRequest"
      responses:
        "204":
          $ref: "#/components/responses/NoContentResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    delete:
      summary: Reset the given config to default value
      operationId: deleteKafkaLinkConfig
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "204":
          $ref: "#/components/responses/NoContentResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/configs:alter:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"

    put:
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Batch Alter Cluster Link Configs
      operationId: updateKafkaLinkConfigBatch
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/ValidateOnly"
      requestBody:
        $ref: "#/components/requestBodies/AlterLinkConfigBatchRequest"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"
      summary: Batch Alter Cluster Link Configs

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"

    post:
      summary: Create a mirror topic
      operationId: createKafkaMirrorTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        Create a topic in the destination cluster mirroring a topic in
        the source cluster
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/CreateMirrorTopicRequest"
      responses:
        "204":
          $ref: "#/components/responses/NoContentResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

    get:
      summary: List mirror topics
      operationId: listKafkaMirrorTopicsUnderLink
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        List all mirror topics under the link
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/MirrorTopicStatus"
      responses:
        "200":
          $ref: "#/components/responses/ListMirrorTopicsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/-/mirrors:
    parameters:
      - $ref: "#/components/parameters/ClusterId"

    get:
      summary: List mirror topics
      operationId: listKafkaMirrorTopics
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)

        List all mirror topics in the cluster
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      parameters:
        - $ref: "#/components/parameters/MirrorTopicStatus"
      responses:
        "200":
          $ref: "#/components/responses/ListMirrorTopicsResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors/{mirror_topic_name}:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/MirrorTopicName"

    get:
      summary: Describe the mirror topic
      operationId: readKafkaMirrorTopic
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      parameters:
        - $ref: "#/components/parameters/IncludeStateTransitionErrors"
      security:
        - resource-api-key: []
        - external-access-token: []
      responses:
        "200":
          $ref: "#/components/responses/DescribeMirrorTopicResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:promote:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Promote the mirror topics
      operationId: updateKafkaMirrorTopicsPromote
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:failover:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Failover the mirror topics
      operationId: updateKafkaMirrorTopicsFailover
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:pause:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Pause the mirror topics
      operationId: updateKafkaMirrorTopicsPause
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:resume:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Resume the mirror topics
      operationId: updateKafkaMirrorTopicsResume
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:reverse-and-start-mirror:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Reverse the local mirror topic and start the remote mirror topic
      operationId: updateKafkaMirrorTopicsReverseAndStartMirror
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

  /kafka/v3/clusters/{cluster_id}/links/{link_name}/mirrors:reverse-and-pause-mirror:
    parameters:
      - $ref: "#/components/parameters/ClusterId"
      - $ref: "#/components/parameters/LinkName"
      - $ref: "#/components/parameters/ValidateOnly"

    post:
      summary: Reverse the local mirror topic and Pause the remote mirror topic
      operationId: updateKafkaMirrorTopicsReverseAndPauseMirror
      description: |-
        [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
      tags:
        - Cluster Linking (v3)
      security:
        - resource-api-key: []
        - external-access-token: []
      requestBody:
        $ref: "#/components/requestBodies/AlterMirrorsRequest"
      responses:
        "200":
          $ref: "#/components/responses/AlterMirrorStatusResponse"
        "400":
          $ref: "#/components/responses/BadRequestErrorResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        "429":
          $ref: "#/components/responses/TooManyRequestsErrorResponse"
        5XX:
          $ref: "#/components/responses/ServerErrorResponse"

components:
  parameters:
    AclHost:
      name: host
      description: The ACL host.
      in: query
      required: false
      schema:
        type: string

    AclOperation:
      name: operation
      description: The ACL operation.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/AclOperation"

    AclOperationRequired:
      name: operation
      description: The ACL operation.
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/AclOperation"

    AclPatternType:
      name: pattern_type
      description: The ACL pattern type.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/AclPatternType"

    AclPatternTypeRequired:
      name: pattern_type
      description: The ACL pattern type.
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/AclPatternType"

    AclPermission:
      name: permission
      description: The ACL permission.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/AclPermission"

    AclPermissionRequired:
      name: permission
      description: The ACL permission.
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/AclPermission"

    AclPrincipal:
      name: principal
      description: The ACL principal. This is the Service Account name or user name.
      in: query
      required: false
      schema:
        type: string

    AclResourceName:
      name: resource_name
      description: The ACL resource name.
      in: query
      required: false
      schema:
        type: string

    AclResourceType:
      name: resource_type
      description: The ACL resource type.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/AclResourceType"

    AclResourceTypeRequired:
      name: resource_type
      description: The ACL resource type.
      in: query
      required: true
      schema:
        $ref: "#/components/schemas/AclResourceType"

    BrokerId:
      name: broker_id
      description: The Kafka broker ID.
      in: path
      required: true
      schema:
        type: integer
      example: 1

    ClusterId:
      name: cluster_id
      description: The Kafka cluster ID.
      in: path
      required: true
      schema:
        type: string
      example: cluster-1

    ConfigName:
      name: name
      description: The configuration parameter name.
      in: path
      required: true
      schema:
        type: string
      example: compression.type

    ConsumerGroupId:
      name: consumer_group_id
      description: The consumer group ID.
      in: path
      required: true
      schema:
        type: string
      example: consumer-group-1

    ConsumerId:
      name: consumer_id
      description: The consumer ID.
      in: path
      required: true
      schema:
        type: string
      example: consumer-1

    IncludeAuthorizedOperations:
      name: include_authorized_operations
      description: Specify if authorized operations should be included in the response.
      in: query
      required: false
      schema:
        type: boolean

    IncludeAuthorizedOperationsCamelCase:
      name: includeAuthorizedOperations
      description: Specify if authorized operations should be included in the response.
      in: query
      required: false
      schema:
        type: boolean

    PartitionId:
      name: partition_id
      description: The partition ID.
      in: path
      required: true
      schema:
        type: integer
      example: 0

    TopicName:
      name: topic_name
      description: The topic name.
      in: path
      required: true
      schema:
        type: string
      example: topic-1

    BrokerTaskType:
      name: task_type
      description: The Kafka broker task type.
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/BrokerTaskType"
      example: remove-broker

    ShouldShutdown:
      name: should_shutdown
      description: "To shutdown the broker or not, Default: true"
      in: query
      required: false
      schema:
        type: boolean
      example: true

    ValidateOnly:
      name: validate_only
      description: "To validate the action can be performed successfully or not. Default: false"
      in: query
      required: false
      schema:
        type: boolean
      example: false

    ValidateLink:
      name: validate_link
      description:
        "To synchronously validate that the source cluster ID is expected and the dest cluster has
        the permission to read topics in the source cluster. Default: true"
      in: query
      required: false
      schema:
        type: boolean
      example: false

    IncludeTasks:
      name: include_tasks
      description: "Whether to include cluster linking tasks in the response. Default: false"
      in: query
      required: false
      schema:
        type: boolean
      example: false

    IncludeStateTransitionErrors:
      name: include_state_transition_errors
      description:
        "Whether to include mirror state transition errors in the response. Default: false"
      in: query
      required: false
      schema:
        type: boolean
      example: false

    Force:
      name: force
      description: "Force the action. Default: false"
      in: query
      required: false
      schema:
        type: boolean
      example: false

    LinkName:
      name: link_name
      description: The link name
      in: path
      required: true
      schema:
        type: string
      example: link-sb1

    LinkConfigName:
      name: config_name
      description: The link config name
      in: path
      required: true
      schema:
        type: string
      example: consumer.offset.sync.enable

    MirrorTopicStatus:
      name: mirror_status
      description:
        The status of the mirror topic. If not specified, all mirror topics will be returned.
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/MirrorTopicStatus"
      example: ACTIVE

    MirrorTopicName:
      name: mirror_topic_name
      description: Cluster Linking mirror topic name
      in: path
      required: true
      schema:
        type: string
      example: topic-1

    QueryParamLinkName:
      name: link_name
      description: The link name
      in: query
      required: true
      schema:
        type: string
      example: link-sb1

  schemas:
    AbstractConfigData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - name
            - is_default
            - is_read_only
            - is_sensitive
            - source
            - synonyms
          properties:
            cluster_id:
              type: string
            name:
              type: string
            value:
              type: string
              nullable: true
            is_default:
              type: boolean
            is_read_only:
              type: boolean
            is_sensitive:
              type: boolean
            source:
              $ref: "#/components/schemas/ConfigSource"
            synonyms:
              type: array
              items:
                $ref: "#/components/schemas/ConfigSynonymData"
            # Currently the aggregator script doesn't merge correctly some
            # otherwise identical parts of duplicate components defined in
            # both kafka-rest and ce-kafka-rest's OpenAPI specs.
            # In some cases this can be handled by slightly tweaking the
            # input specs, but in other cases this requires manual
            # intervention in the consolidated specs after the generation.
            # We should eventually fix the aggregator script, but in the
            # meantime, we should be careful during reviews, making sure
            # that comments like this do not get replaced by wrongly
            # merged autogenerated content.
            # See https://github.com/confluentinc/ce-kafka-rest/pull/227.

    AclData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - resource_type
            - resource_name
            - pattern_type
            - principal
            - host
            - operation
            - permission
          properties:
            cluster_id:
              type: string
            resource_type:
              $ref: "#/components/schemas/AclResourceType"
            resource_name:
              type: string
            pattern_type:
              $ref: "#/components/schemas/AclPatternType"
            principal:
              type: string
            host:
              type: string
            operation:
              $ref: "#/components/schemas/AclOperation"
            permission:
              $ref: "#/components/schemas/AclPermission"

    AclDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AclData"

    AclOperation:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - ALL
        - READ
        - WRITE
        - CREATE
        - DELETE
        - ALTER
        - DESCRIBE
        - CLUSTER_ACTION
        - DESCRIBE_CONFIGS
        - ALTER_CONFIGS
        - IDEMPOTENT_WRITE

    AclPatternType:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - MATCH
        - LITERAL
        - PREFIXED

    AclPermission:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ANY
        - DENY
        - ALLOW

    AclResourceType:
      type: string
      enum:
        - UNKNOWN
        - ANY
        - TOPIC
        - GROUP
        - CLUSTER
        - TRANSACTIONAL_ID
        - DELEGATION_TOKEN

    AlterConfigBatchRequestData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              value:
                type: string
                nullable: true
              operation:
                type: string
                x-extensible-enum:
                  - SET
                  - DELETE
                nullable: true
        validate_only:
          type: boolean

    AnyValue:
      nullable: true

    AuthorizedOperations:
      type: array
      items:
        type: string
        x-extensible-enum:
          - UNKNOWN
          - ALL
          - READ
          - WRITE
          - CREATE
          - DELETE
          - ALTER
          - DESCRIBE
          - CLUSTER_ACTION
          - DESCRIBE_CONFIGS
          - ALTER_CONFIGS
          - IDEMPOTENT_WRITE

    BrokerConfigData:
      allOf:
        - $ref: "#/components/schemas/AbstractConfigData"
        - type: object
          required:
            - broker_id
          properties:
            broker_id:
              type: integer

    BrokerConfigDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BrokerConfigData"

    BrokerData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - configs
            - partition_replicas
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            host:
              type: string
              nullable: true
            port:
              type: integer
              nullable: true
            rack:
              type: string
              nullable: true
            configs:
              $ref: "#/components/schemas/Relationship"
            partition_replicas:
              $ref: "#/components/schemas/Relationship"

    BrokerDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BrokerData"

    ClusterConfigData:
      allOf:
        - $ref: "#/components/schemas/AbstractConfigData"
        - type: object
          required:
            - config_type
          properties:
            config_type:
              $ref: "#/components/schemas/ClusterConfigType"

    ClusterConfigDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ClusterConfigData"

    ClusterConfigType:
      type: string
      x-extensible-enum:
        - BROKER

    ClusterData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - acls
            - brokers
            - broker_configs
            - consumer_groups
            - topics
            - partition_reassignments
          properties:
            cluster_id:
              type: string
            controller:
              $ref: "#/components/schemas/Relationship"
            acls:
              $ref: "#/components/schemas/Relationship"
            brokers:
              $ref: "#/components/schemas/Relationship"
            broker_configs:
              $ref: "#/components/schemas/Relationship"
            consumer_groups:
              $ref: "#/components/schemas/Relationship"
            topics:
              $ref: "#/components/schemas/Relationship"
            partition_reassignments:
              $ref: "#/components/schemas/Relationship"

    ClusterDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ClusterData"

    CreateAclRequestData:
      type: object
      required:
        - resource_type
        - resource_name
        - pattern_type
        - principal
        - host
        - operation
        - permission
      properties:
        resource_type:
          $ref: "#/components/schemas/AclResourceType"
        resource_name:
          type: string
        pattern_type:
          $ref: "#/components/schemas/AclPatternType"
        principal:
          type: string
        host:
          type: string
        operation:
          $ref: "#/components/schemas/AclOperation"
        permission:
          $ref: "#/components/schemas/AclPermission"

    CreateAclRequestDataList:
      allOf:
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/CreateAclRequestData"

    CreateTopicRequestData:
      type: object
      required:
        - topic_name
      properties:
        topic_name:
          type: string
        partitions_count:
          type: integer
        replication_factor:
          type: integer
        configs:
          type: array
          items:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              value:
                type: string
                nullable: true
        validate_only:
          type: boolean

    ConfigSource:
      type: string
      x-extensible-enum:
        - DYNAMIC_CLUSTER_LINK_CONFIG
        - DYNAMIC_TOPIC_CONFIG
        - DYNAMIC_BROKER_LOGGER_CONFIG
        - DYNAMIC_BROKER_CONFIG
        - DYNAMIC_DEFAULT_BROKER_CONFIG
        - STATIC_BROKER_CONFIG
        - DEFAULT_CONFIG
        - UNKNOWN
        # Currently the aggregator script doesn't merge correctly some
        # otherwise identical parts of duplicate components defined in
        # both kafka-rest and ce-kafka-rest's OpenAPI specs.
        # In some cases this can be handled by slightly tweaking the
        # input specs, but in other cases this requires manual
        # intervention in the consolidated specs after the generation.
        # We should eventually fix the aggregator script, but in the
        # meantime, we should be careful during reviews, making sure
        # that comments like this do not get replaced by wrongly
        # merged autogenerated content.
        # See https://github.com/confluentinc/ce-kafka-rest/pull/227.

    ConfigSynonymData:
      type: object
      required:
        - name
        - source
      properties:
        name:
          type: string
        value:
          type: string
          nullable: true
        source:
          $ref: "#/components/schemas/ConfigSource"

    ConsumerAssignmentData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - consumer_group_id
            - consumer_id
            - topic_name
            - partition_id
            - partition
            - lag
          properties:
            cluster_id:
              type: string
            consumer_group_id:
              type: string
            consumer_id:
              type: string
            topic_name:
              type: string
            partition_id:
              type: integer
            partition:
              $ref: "#/components/schemas/Relationship"
            lag:
              $ref: "#/components/schemas/Relationship"

    ConsumerAssignmentDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ConsumerAssignmentData"

    ConsumerData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - consumer_group_id
            - consumer_id
            - client_id
            - assignments
          properties:
            cluster_id:
              type: string
            consumer_group_id:
              type: string
            consumer_id:
              type: string
            instance_id:
              type: string
              nullable: true
            client_id:
              type: string
            assignments:
              $ref: "#/components/schemas/Relationship"

    ConsumerDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ConsumerData"

    ConsumerGroupData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - consumer_group_id
            - is_simple
            - partition_assignor
            - state
            - coordinator
            - consumers
            - lag_summary
          properties:
            cluster_id:
              type: string
            consumer_group_id:
              type: string
            is_simple:
              type: boolean
            partition_assignor:
              type: string
            state:
              $ref: "#/components/schemas/ConsumerGroupState"
            coordinator:
              $ref: "#/components/schemas/Relationship"
            consumer:
              $ref: "#/components/schemas/Relationship"
            lag_summary:
              $ref: "#/components/schemas/Relationship"

    ConsumerGroupDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ConsumerGroupData"

    ConsumerGroupState:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - PREPARING_REBALANCE
        - COMPLETING_REBALANCE
        - STABLE
        - DEAD
        - EMPTY

    ConsumerLagData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - consumer_group_id
            - topic_name
            - partition_id
            - current_offset
            - log_end_offset
            - lag
            - consumer_id
            - client_id
          properties:
            cluster_id:
              type: string
            consumer_group_id:
              type: string
            topic_name:
              type: string
            partition_id:
              type: integer
            current_offset:
              type: integer
              format: int64
            log_end_offset:
              type: integer
              format: int64
            lag:
              type: integer
              format: int64
            consumer_id:
              type: string
            instance_id:
              type: string
              nullable: true
            client_id:
              type: string

    ConsumerLagDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ConsumerLagData"

    ConsumerGroupLagSummaryData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - consumer_group_id
            - max_lag_consumer_id
            - max_lag_client_id
            - max_lag_topic_name
            - max_lag_partition_id
            - max_lag
            - total_lag
            - max_lag_consumer
            - max_lag_partition
          properties:
            cluster_id:
              type: string
            consumer_group_id:
              type: string
            max_lag_consumer_id:
              type: string
            max_lag_instance_id:
              type: string
              nullable: true
            max_lag_client_id:
              type: string
            max_lag_topic_name:
              type: string
            max_lag_partition_id:
              type: integer
            max_lag:
              type: integer
              format: int64
            total_lag:
              type: integer
              format: int64
            max_lag_consumer:
              $ref: "#/components/schemas/Relationship"
            max_lag_partition:
              $ref: "#/components/schemas/Relationship"

    Error:
      type: object
      required:
        - error_code
        - message
      properties:
        error_code:
          type: integer
          format: int32
        message:
          type: string
          nullable: true

    PartitionData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - topic_name
            - partition_id
            - replicas
            - reassignment
          properties:
            cluster_id:
              type: string
            topic_name:
              type: string
            partition_id:
              type: integer
            leader:
              $ref: "#/components/schemas/Relationship"
            replicas:
              $ref: "#/components/schemas/Relationship"
            reassignment:
              $ref: "#/components/schemas/Relationship"

    PartitionDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/PartitionData"

    ProduceResponse:
      type: object
      required:
        - error_code
      properties:
        error_code:
          type: integer
          format: int32
        message:
          type: string
        cluster_id:
          type: string
        topic_name:
          type: string
        partition_id:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
          nullable: true
        key:
          $ref: "#/components/schemas/ProduceResponseData"
        value:
          $ref: "#/components/schemas/ProduceResponseData"

    ProduceResponseData:
      type: object
      required:
        - size
        - type
      properties:
        size:
          type: integer
        type:
          type: string
          x-extensible-enum:
            - BINARY
            - JSON
            - STRING
      nullable: true

    ProduceRequest:
      type: object
      properties:
        partition_id:
          type: integer
          nullable: true
          format: int32
        headers:
          type: array
          items:
            $ref: "#/components/schemas/ProduceRequestHeader"
        key:
          $ref: "#/components/schemas/ProduceRequestData"
        value:
          $ref: "#/components/schemas/ProduceRequestData"
        timestamp:
          type: string
          format: date-time
          nullable: true

    ProduceRequestData:
      type: object
      properties:
        type:
          type: string
          x-extensible-enum:
            - BINARY
            - JSON
            - STRING
        data:
          $ref: "#/components/schemas/AnyValue"
      nullable: true

    ProduceRequestHeader:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        value:
          type: string
          format: byte
          nullable: true

    ReassignmentData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - topic_name
            - partition_id
            - adding_replicas
            - removing_replicas
            - replicas
          properties:
            cluster_id:
              type: string
            topic_name:
              type: string
            partition_id:
              type: integer
            adding_replicas:
              type: array
              items:
                type: integer
            removing_replicas:
              type: array
              items:
                type: integer
            replicas:
              $ref: "#/components/schemas/Relationship"

    ReassignmentDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ReassignmentData"

    Relationship:
      type: object
      required:
        - related
      properties:
        related:
          type: string

    ReplicaData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - topic_name
            - partition_id
            - broker_id
            - is_leader
            - is_in_sync
            - broker
          properties:
            cluster_id:
              type: string
            topic_name:
              type: string
            partition_id:
              type: integer
            broker_id:
              type: integer
            is_leader:
              type: boolean
            is_in_sync:
              type: boolean
            broker:
              $ref: "#/components/schemas/Relationship"

    ReplicaDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ReplicaData"

    Resource:
      type: object
      required:
        - kind
        - metadata
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/ResourceMetadata"

    ResourceCollection:
      type: object
      required:
        - kind
        - metadata
      properties:
        kind:
          type: string
        metadata:
          $ref: "#/components/schemas/ResourceCollectionMetadata"

    ResourceCollectionMetadata:
      type: object
      required:
        - self
      properties:
        self:
          type: string
        next:
          type: string
          nullable: true

    ResourceMetadata:
      type: object
      required:
        - self
      properties:
        self:
          type: string
        resource_name:
          type: string
          nullable: true

    TopicConfigData:
      allOf:
        - $ref: "#/components/schemas/AbstractConfigData"
        - type: object
          required:
            - topic_name
          properties:
            topic_name:
              type: string
          # Currently the aggregator script doesn't merge correctly some
          # otherwise identical parts of duplicate components defined in
          # both kafka-rest and ce-kafka-rest's OpenAPI specs.
          # In some cases this can be handled by slightly tweaking the
          # input specs, but in other cases this requires manual
          # intervention in the consolidated specs after the generation.
          # We should eventually fix the aggregator script, but in the
          # meantime, we should be careful during reviews, making sure
          # that comments like this do not get replaced by wrongly
          # merged autogenerated content.
          # See https://github.com/confluentinc/ce-kafka-rest/pull/227.

    TopicConfigDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/TopicConfigData"
          # Currently the aggregator script doesn't merge correctly some
          # otherwise identical parts of duplicate components defined in
          # both kafka-rest and ce-kafka-rest's OpenAPI specs.
          # In some cases this can be handled by slightly tweaking the
          # input specs, but in other cases this requires manual
          # intervention in the consolidated specs after the generation.
          # We should eventually fix the aggregator script, but in the
          # meantime, we should be careful during reviews, making sure
          # that comments like this do not get replaced by wrongly
          # merged autogenerated content.
          # See https://github.com/confluentinc/ce-kafka-rest/pull/227.

    TopicData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - topic_name
            - is_internal
            - replication_factor
            - partitions_count
            - partitions
            - configs
            - partition_reassignments
          properties:
            cluster_id:
              type: string
            topic_name:
              type: string
            is_internal:
              type: boolean
            replication_factor:
              type: integer
            partitions_count:
              type: integer
            partitions:
              $ref: "#/components/schemas/Relationship"
            configs:
              $ref: "#/components/schemas/Relationship"
            partition_reassignments:
              $ref: "#/components/schemas/Relationship"
            authorized_operations:
              $ref: "#/components/schemas/AuthorizedOperations"

    TopicDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/TopicData"

    UpdateConfigRequestData:
      type: object
      properties:
        value:
          type: string
          nullable: true

    UpdatePartitionCountRequestData:
      type: object
      required:
        - partitions_count
      properties:
        partitions_count:
          type: integer
          format: int32

    ReplicaStatusData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - topic_name
            - broker_id
            - partition_id
            - is_leader
            - is_observer
            - is_isr_eligible
            - is_in_isr
            - is_caught_up
            - log_start_offset
            - log_end_offset
            - last_caught_up_time_ms
            - last_fetch_time_ms
          properties:
            cluster_id:
              type: string
            topic_name:
              type: string
            broker_id:
              type: integer
              format: int32
            partition_id:
              type: integer
              format: int32
            is_leader:
              type: boolean
            is_observer:
              type: boolean
            is_isr_eligible:
              type: boolean
            is_in_isr:
              type: boolean
            is_caught_up:
              type: boolean
            log_start_offset:
              format: int64
              type: integer
            log_end_offset:
              format: int64
              type: integer
            last_caught_up_time_ms:
              format: int64
              type: integer
            last_fetch_time_ms:
              format: int64
              type: integer
            link_name:
              type: string

    ReplicaStatusDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ReplicaStatusData"

    AnyUnevenLoadData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - status
            - previous_status
            - status_updated_at
            - previous_status_updated_at
            - broker_tasks
          properties:
            cluster_id:
              type: string
            status:
              $ref: "#/components/schemas/AnyUnevenLoadStatus"
            previous_status:
              $ref: "#/components/schemas/AnyUnevenLoadStatus"
            status_updated_at:
              type: string
              format: date-time
              example: "2019-10-12T07:20:50Z"
              readOnly: true
              description: The date and time at which this task was created.
            previous_status_updated_at:
              type: string
              format: date-time
              example: "2019-10-12T07:20:50Z"
              readOnly: true
              description: The date and time at which this task was created.
            error_code:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            broker_tasks:
              $ref: "#/components/schemas/Relationship"

    BalancerStatusData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - status
            - any_uneven_load
            - broker_tasks
          properties:
            cluster_id:
              type: string
            status:
              $ref: "#/components/schemas/BalancerStatus"
            error_code:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            any_uneven_load:
              $ref: "#/components/schemas/Relationship"
            broker_tasks:
              $ref: "#/components/schemas/Relationship"

    BrokerRemovalData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - broker_task
            - broker
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            broker_task:
              $ref: "#/components/schemas/Relationship"
            broker:
              $ref: "#/components/schemas/Relationship"

    BrokerRemovalDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BrokerRemovalData"

    BrokerTaskData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - task_type
            - task_status
            - sub_task_statuses
            - created_at
            - updated_at
            - broker
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            task_type:
              $ref: "#/components/schemas/BrokerTaskType"
            task_status:
              $ref: "#/components/schemas/BrokerTaskStatus"
            shutdown_scheduled:
              type: boolean
              nullable: true
            sub_task_statuses:
              type: object
              additionalProperties:
                type: string
            created_at:
              type: string
              format: date-time
              example: "2019-10-12T07:20:50Z"
              readOnly: true
              description: The date and time at which this task was created.
            updated_at:
              type: string
              format: date-time
              example: "2019-10-12T07:20:50Z"
              readOnly: true
              description: The date and time at which this task was last updated.
            error_code:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            broker:
              $ref: "#/components/schemas/Relationship"

    BrokerTaskDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BrokerTaskData"

    BrokerReplicaExclusionRequestData:
      type: object
      required:
        - broker_id
        - reason
      properties:
        broker_id:
          type: integer
        reason:
          type: string

    BrokerReplicaExclusionBatchRequestData:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/BrokerReplicaExclusionRequestData"

    BrokerReplicaExclusionData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - reason
            - broker
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            reason:
              type: string
            broker:
              $ref: "#/components/schemas/Relationship"

    BrokerReplicaExclusionDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/BrokerReplicaExclusionData"

    AlterBrokerReplicaExclusionData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - exclusion
            - reason
            - broker
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            exclusion:
              $ref: "#/components/schemas/ExclusionOp"
            reason:
              type: string
            error_code:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            broker:
              $ref: "#/components/schemas/Relationship"

    AlterBrokerReplicaExclusionDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlterBrokerReplicaExclusionData"

    RemoveBrokerTaskData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - broker_id
            - shutdown_scheduled
            - broker_replica_exclusion_status
            - partition_reassignment_status
            - broker_shutdown_status
            - broker
          properties:
            cluster_id:
              type: string
            broker_id:
              type: integer
            shutdown_scheduled:
              type: boolean
            broker_replica_exclusion_status:
              $ref: "#/components/schemas/BrokerReplicaExclusionStatus"
            partition_reassignment_status:
              $ref: "#/components/schemas/DeprecatedPartitionReassignmentStatus"
            broker_shutdown_status:
              $ref: "#/components/schemas/DeprecatedBrokerShutdownStatus"
            error_code:
              type: integer
              nullable: true
            error_message:
              type: string
              nullable: true
            broker:
              $ref: "#/components/schemas/Relationship"

    RemoveBrokerTaskDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/RemoveBrokerTaskData"

    ConfigData:
      example:
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          nullable: true
          type: string
      required:
        - name
        - value

    CreateLinkRequestData:
      properties:
        source_cluster_id:
          type: string
        destination_cluster_id:
          type: string
        remote_cluster_id:
          description: The expected remote cluster ID.
          type: string
        cluster_link_id:
          description:
            The expected cluster link ID. Can be provided when creating the second side of a
            bidirectional link for validating the link ID is as expected. If it's not provided, it's
            inferred from the remote cluster.
          type: string
        configs:
          items:
            $ref: "#/components/schemas/ConfigData"
          type: array
      type: object

    UpdateLinkConfigRequestData:
      properties:
        value:
          type: string
      required:
        - value
      type: object

    LinkState:
      type: string
      x-extensible-enum:
        - ACTIVE
        - FAILED
        - UNAVAILABLE
        - PAUSED
        - UNKNOWN

    LinkError:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - NO_ERROR
        - AUTHENTICATION_ERROR
        - UNRESOLVABLE_BOOTSTRAP_ERROR
        - INVALID_BOOTSTRAP_INTERNAL_ENDPOINT_ERROR
        - BOOTSTRAP_TCP_CONNECTION_FAILED_ERROR
        - TIMEOUT_ERROR

    LinkTask:
      type: object
      required:
        - task_name
        - state
        - errors
      properties:
        task_name:
          type: string
        state:
          $ref: "#/components/schemas/LinkTaskState"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/LinkTaskError"

    LinkTaskError:
      type: object
      required:
        - error_code
        - error_message
      properties:
        error_code:
          type: string
        error_message:
          type: string

    LinkTaskState:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - ACTIVE
        - IN_ERROR
        - NOT_CONFIGURED
        - LINK_FAILED
        - LINK_UNAVAILABLE
        - LINK_PAUSED

    LinkTaskErrorCode:
      type: string
      x-extensible-enum:
        - UNKNOWN
        - NO_ERROR
        - INTERNAL_ERROR
        - AUTHENTICATION_ERROR
        - BROKER_AUTHENTICATION_ERROR
        - MISCONFIGURATION_ERROR
        - REMOTE_LINK_NOT_FOUND_ERROR
        - LINK_NOT_FOUND_ERROR
        - CONSUMER_GROUP_IN_USE_ERROR
        - AUTHORIZATION_ERROR
        - BROKER_AUTHORIZATION_ERROR
        - SECURITY_DISABLED_ERROR
        - TOPIC_EXISTS_ERROR
        - POLICY_VIOLATION_ERROR
        - LINK_COORDINATOR_NOT_ENABLED_ERROR
        - ACL_LIMIT_EXCEEDED
        - REMOTE_MIRROR_NOT_FOUND_ERROR
        - UNKNOWN_TOPIC_OR_PARTITION_ERROR
        - INVALID_TOPIC
        - SUPPRESSED_ERRORS
        - INVALID_REQUEST_ERROR

    ListLinksResponseData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - link_name
            - cluster_link_id
            - topic_names
          properties:
            source_cluster_id:
              type: string
              nullable: true
            destination_cluster_id:
              type: string
              nullable: true
            remote_cluster_id:
              type: string
              nullable: true
            link_name:
              type: string
            link_id:
              type: string
              deprecated: true
            cluster_link_id:
              type: string
            topic_names:
              type: array
              items:
                type: string
            link_error:
              $ref: "#/components/schemas/LinkError"
              nullable: true
            link_error_message:
              type: string
              nullable: true
            link_state:
              $ref: "#/components/schemas/LinkState"
              nullable: true
            tasks:
              nullable: true
              type: array
              items:
                $ref: "#/components/schemas/LinkTask"

    # This schema also exists in kafka-rest/api/v3/openapi.yaml. The aggregator script is not
    # handling that correctly and is duplicating the required and enum sections below. They have
    # been commented out, so that consolidated-openapi.yaml is generated correctly.
    ListLinksResponseDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ListLinksResponseData"

    ListLinkConfigsResponseData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - cluster_id
            - name
            - value
            - default
            - read_only
            - sensitive
            - source
            - synonyms
            - link_name
          properties:
            cluster_id:
              type: string
            name:
              type: string
            value:
              type: string
            read_only:
              type: boolean
            sensitive:
              type: boolean
            source:
              type: string
              x-extensible-enum:
                - DYNAMIC_CLUSTER_LINK_CONFIG
            synonyms:
              type: array
              items:
                type: string
            link_name:
              type: string

    ListLinkConfigsResponseDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ListLinkConfigsResponseData"

    CreateMirrorTopicRequestData:
      properties:
        source_topic_name:
          type: string
        mirror_topic_name:
          type: string
        replication_factor:
          type: integer
        configs:
          type: array
          items:
            $ref: "#/components/schemas/ConfigData"
      required:
        - source_topic_name
      type: object

    AlterMirrorsRequestData:
      properties:
        mirror_topic_names:
          description: "The mirror topics specified as a list of topic names."
          type: array
          items:
            type: string
        mirror_topic_name_pattern:
          description: "The mirror topics specified as a pattern."
          type: string
      type: object

    ListMirrorTopicsResponseData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - link_name
            - mirror_topic_name
            - source_topic_name
            - num_partitions
            - mirror_lags
            - mirror_status
            - state_time_ms
          properties:
            link_name:
              type: string
            mirror_topic_name:
              type: string
            source_topic_name:
              type: string
            num_partitions:
              type: integer
            mirror_lags:
              $ref: "#/components/schemas/MirrorLags"
            mirror_status:
              $ref: "#/components/schemas/MirrorTopicStatus"
            state_time_ms:
              type: integer
              format: int64
            mirror_state_transition_errors:
              type: array
              items:
                $ref: "#/components/schemas/LinkTaskError"

    ListMirrorTopicsResponseDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/ListMirrorTopicsResponseData"

    AlterMirrorStatusResponseData:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - type: object
          required:
            - mirror_topic_name
            - error_message
            - error_code
            - mirror_lags
          properties:
            mirror_topic_name:
              type: string
            error_message:
              type: string
              nullable: true
            error_code:
              type: integer
              nullable: true
            mirror_lags:
              $ref: "#/components/schemas/MirrorLags"

    AlterMirrorStatusResponseDataList:
      allOf:
        - $ref: "#/components/schemas/ResourceCollection"
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/AlterMirrorStatusResponseData"

    RemoveBrokersRequestData:
      properties:
        broker_ids:
          type: array
          items:
            type: integer
      required:
        - broker_ids
      type: object

    MirrorLags:
      type: array
      items:
        $ref: "#/components/schemas/MirrorLag"

    MirrorLag:
      type: object
      required:
        - partition
        - lag
        - last_source_fetch_offset
      properties:
        partition:
          type: integer
        lag:
          type: integer
          format: int64
        last_source_fetch_offset:
          type: integer
          format: int64

    MirrorTopicStatus:
      enum:
        - ACTIVE
        - FAILED
        - LINK_FAILED
        - LINK_PAUSED
        - PAUSED
        - PENDING_STOPPED
        - SOURCE_UNAVAILABLE
        - STOPPED
        - PENDING_MIRROR
        - PENDING_SYNCHRONIZE
      type: string

    AnyUnevenLoadStatus:
      type: string
      x-extensible-enum:
        - STARTING
        - BALANCING
        - BALANCED
        - BALANCING_FAILED
        - DISABLED
        - ABORTED
        - UNKNOWN

    BalancerStatus:
      type: string
      x-extensible-enum:
        - BOOTSTRAPPING
        - STARTING
        - ENABLED
        - ERROR
        - DISABLED
        - FAILOVER
        - LOAD_FAILURE
        - UNKNOWN

    BrokerTaskType:
      type: string
      enum:
        - add-broker
        - remove-broker

    BrokerTaskStatus:
      type: string
      x-extensible-enum:
        - FAILED
        - IN_PROGRESS
        - SUCCESS
        - UNKNOWN

    ExclusionOp:
      type: string
      x-extensible-enum:
        - SET
        - DELETE
        - UNKNOWN

    BrokerReplicaExclusionStatus:
      type: string
      x-extensible-enum:
        - PENDING
        - IN_PROGRESS
        - EXCLUDED
        - REMOVING
        - ERROR
        - CANCELED
        - COMPLETED
        - UNKNOWN

    DeprecatedPartitionReassignmentStatus:
      type: string
      x-extensible-enum:
        - CANCELED
        - FAILED
        - PENDING
        - IN_PROGRESS
        - COMPLETE

    DeprecatedBrokerShutdownStatus:
      type: string
      x-extensible-enum:
        - FAILED
        - CANCELED
        - PENDING
        - COMPLETE

  requestBodies:
    AlterBrokerConfigBatchRequest:
      description: The alter broker configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterConfigBatchRequestData"
          example:
            data:
              - name: max.connections
                operation: DELETE
              - name: compression.type
                value: gzip

    AlterClusterConfigBatchRequest:
      description: The alter cluster configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterConfigBatchRequestData"
          example:
            data:
              - name: max.connections
                operation: DELETE
              - name: compression.type
                value: gzip

    AlterTopicConfigBatchRequest:
      description: The alter topic configuration parameter batch request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterConfigBatchRequestData"
          examples:
            batch_alter_topic_configs:
              value:
                data:
                  - name: cleanup.policy
                    operation: DELETE
                  - name: compression.type
                    value: gzip
            validate_only_batch_alter_topic_configs:
              value:
                data:
                  - name: cleanup.policy
                    operation: DELETE
                  - name: compression.type
                    value: gzip
                validate_only: true

    CreateAclRequest:
      description: The ACL creation request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateAclRequestData"
          example:
            resource_type: CLUSTER
            resource_name: kafka-cluster
            pattern_type: LITERAL
            principal: principalType:principalName
            host: "*"
            operation: DESCRIBE
            permission: DENY

    BatchCreateAclRequest:
      description: The batch ACL creation request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateAclRequestDataList"
          example:
            data:
              - resource_type: CLUSTER
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: principalType:principalName
                host: "*"
                operation: DESCRIBE
                permission: DENY
              - resource_type: TOPIC
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: principalType:principalName
                host: "*"
                operation: READ
                permission: ALLOW

    CreateTopicRequest:
      description:
        The topic creation request. Note that Confluent Cloud allows only specific replication
        factor values. Because of that the replication factor field should either be omitted or it
        should use one of the allowed values (see
        https://docs.confluent.io/cloud/current/client-apps/optimizing/durability.html).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateTopicRequestData"
          examples:
            uniform_replication:
              value:
                topic_name: topic-X
                partitions_count: 64
                replication_factor: 3
                configs:
                  - name: cleanup.policy
                    value: compact
                  - name: compression.type
                    value: gzip
            dry_run_create_topic:
              value:
                topic_name: topic-X
                partitions_count: 64
                replication_factor: 3
                validate_only: true

    ProduceRequest:
      description:
        A single record to be produced to Kafka. To produce multiple records in the same request,
        simply concatenate the records. The delivery reports are concatenated in the same order as
        the records are sent.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProduceRequest"
          examples:
            binary_and_json:
              description: If using type, one of "BINARY", "JSON" or "STRING" is required.
              value:
                partition_id: 1
                headers:
                  - name: Header-1
                    value: SGVhZGVyLTE=
                  - name: Header-2
                    value: SGVhZGVyLTI=
                key:
                  type: BINARY
                  data: Zm9vYmFy
                value:
                  type: JSON
                  data: { foo: bar }
                timestamp: "2021-02-05T19:14:42Z"
            string:
              description: If using type, one of "BINARY", "JSON" or "STRING" is required.
              value:
                value:
                  type: STRING
                  data: My message
            empty_value:
              description: key or value can be omitted entirely.
              value:
                key:
                  data: 1000

    UpdateBrokerConfigRequest:
      description: The broker configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateConfigRequestData"
          example:
            value: gzip

    UpdateClusterConfigRequest:
      description: The cluster configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateConfigRequestData"
          example:
            value: gzip

    UpdateTopicConfigRequest:
      description: The topic configuration parameter update request.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdateConfigRequestData"
          example:
            value: gzip

    # UpdatePartitionCountRequest:
    #   description: The number of partitions to increase the partition count to.
    #   content:
    #     application/json:
    #       schema:
    #         $ref: '#/components/schemas/UpdatePartitionCountRequestData'
    #       example:
    #         partitions_count: 10

    CreateLinkRequest:
      description: Create a cluster link
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateLinkRequestData"
          examples:
            destination_initiated_link:
              description: Create a destination initiated cluster link
              value:
                source_cluster_id: cluster-1
                configs:
                  - name: bootstrap.servers
                    value: cluster-1-bootstrap-server
                  - name: acl.sync.enable
                    value: "false"
                  - name: consumer.offset.sync.ms
                    value: "30000"
                  - name: sasl.mechanism
                    value: "PLAIN"
                  - name: sasl.protocol
                    value: "SASL_SSL"
                  - name: sasl.jaas.config
                    value:
                      "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
                      required username='<Kafka API Key>' password='<Kafka API Secret>';"

            source_initiated_link_at_source_cluster:
              description: Create a source initiated cluster link at source cluster
              value:
                destination_cluster_id: cluster-2
                configs:
                  - name: bootstrap.servers
                    value: cluster-2-bootstrap-server
                  - name: link.mode
                    value: SOURCE
                  - name: sasl.mechanism
                    value: "PLAIN"
                  - name: sasl.protocol
                    value: "SASL_SSL"
                  - name: sasl.jaas.config
                    value:
                      "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
                      required username='<Kafka API Key>' password='<Kafka API Secret>';"

            source_initiated_link_at_destination_cluster:
              description: Create a source initiated cluster link at destination cluster
              value:
                destination_cluster_id: cluster-1
                configs:
                  - name: bootstrap.servers
                    value: cluster-1-bootstrap-server
                  - name: link.mode
                    value: DESTINATION
                  - name: connection.mode
                    value: INBOUND
                  - name: acl.sync.enable
                    value: "false"
                  - name: sasl.mechanism
                    value: "PLAIN"
                  - name: sasl.protocol
                    value: "SASL_SSL"
                  - name: sasl.jaas.config
                    value:
                      "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
                      required username='<Kafka API Key>' password='<Kafka API Secret>';"

            bidirectional_link_east:
              description: "Create a bidirectional cluster link in east"
              value:
                remote_cluster_id: "cluster-west"
                configs:
                  - name: "bootstrap.servers"
                    value: "cluster-west-bootstrap-server"
                  - name: "link.mode"
                    value: "BIDIRECTIONAL"
                  - name: "cluster.link.prefix"
                    value: "west."
                  - name: sasl.mechanism
                    value: "PLAIN"
                  - name: sasl.protocol
                    value: "SASL_SSL"
                  - name: sasl.jaas.config
                    value:
                      "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
                      required username='<Kafka API Key>' password='<Kafka API Secret>';"

            bidirectional_link_west:
              description: "Create a bidirectional cluster link in west"
              value:
                remote_cluster_id: "cluster-east"
                cluster_link_id: "eEBkTffYSESld6EO898x3w"
                configs:
                  - name: "bootstrap.servers"
                    value: "cluster-east-bootstrap-server"
                  - name: "link.mode"
                    value: "BIDIRECTIONAL"
                  - name: "cluster.link.prefix"
                    value: "east."
                  - name: sasl.mechanism
                    value: "PLAIN"
                  - name: sasl.protocol
                    value: "SASL_SSL"
                  - name: sasl.jaas.config
                    value:
                      "sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule
                      required username='<Kafka API Key>' password='<Kafka API Secret>';"

    UpdateLinkConfigRequest:
      content:
        application/json:
          example:
            value: "300000"
          schema:
            $ref: "#/components/schemas/UpdateLinkConfigRequestData"
      description: Link config value to update

    AlterLinkConfigBatchRequest:
      content:
        application/json:
          example:
            data:
              - name: cleanup.policy
                operation: DELETE
              - name: compression.type
                value: gzip
          schema:
            $ref: "#/components/schemas/AlterConfigBatchRequestData"

    CreateMirrorTopicRequest:
      description:
        Name and configs of the topics mirroring from and mirroring to. Note that Confluent Cloud
        allows only specific replication factor values. Because of that the replication factor field
        should either be omitted or it should use one of the allowed values (see
        https://docs.confluent.io/cloud/current/client-apps/optimizing/durability.html).
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateMirrorTopicRequestData"
          examples:
            generic_example:
              description: Generic example of creating a mirror topic
              value:
                source_topic_name: topic-1
                configs:
                  - name: unclean.leader.election.enable
                    value: "true"
                replication_factor: 1
            example_with_mirror_topic_name:
              description: Example using optional mirror_topic_name flag
              value:
                source_topic_name: topic-1
                mirror_topic_name: link1_topic-1
                configs:
                  - name: unclean.leader.election.enable
                    value: "true"
                replication_factor: 3

    AlterMirrorsRequest:
      description: "Mirror topics to be altered."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterMirrorsRequestData"
          examples:
            mirror_topic_names:
              description: "Example using mirror topic names"
              value:
                mirror_topic_names:
                  - topic-1
                  - topic-2
            mirror_topic_name_pattern:
              description: "Example using mirror topic name pattern"
              value:
                mirror_topic_name_pattern: .*

    RemoveBrokersRequest:
      content:
        application/json:
          example:
            broker_ids:
              - 1
              - 2
              - 3
          schema:
            $ref: "#/components/schemas/RemoveBrokersRequestData"
      description: Broker ids to remove

    BrokerReplicaExclusionBatchRequest:
      description: Alter Broker Replica Exclusions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerReplicaExclusionBatchRequestData"
          example:
            data:
              - broker_id: 1
                reason: The broker is to be removed.
              - broker_id: 2
                reason: The broker is to be removed.

  securitySchemes:
    resource-api-key:
      type: http
      scheme: basic
      description: |
        Authenticate with resource-specific API Keys using HTTP Basic Auth. Treat the resource-specific API Key ID 
        as the username and resource-specific API Key Secret as the password.
    external-access-token:
      type: oauth2
      description: Authenticate with OAuth 2.0.
      flows:
        clientCredentials:
          tokenUrl: https://<oauth-identity-provider>/token
          scopes: {}

  responses:
    CreateTopicResponse:
      description: The created topic.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopicData"
          example:
            kind: KafkaTopic
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-X
              resource_name: crn:///kafka=cluster-1/topic=topic-X
            cluster_id: cluster-1
            topic_name: topic-X
            is_internal: false
            replication_factor: 3
            partitions_count: 1
            partitions:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-X/partitions
            configs:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-X/configs
            partition_reassignments:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-X/partitions/-/reassignments

    DeleteAclsResponse:
      description: The list of deleted ACLs.
      content:
        application/json:
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/AclData"
          example:
            data:
              - kind: KafkaAcl
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=User%3Aalice&host=*&operation=ALL&permission=ALLOW
                cluster_id: cluster-1
                resource_type: TOPIC
                resource_name: topic-
                pattern_type: PREFIXED
                principal: User:alice
                host: "*"
                operation: ALL
                permission: ALLOW
              - kind: KafkaAcl
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=kafka-cluster&pattern_type=LITERAL&principal=User%3Aalice&host=*&operation=DESCRIBE&permission=DENY
                cluster_id: cluster-1
                resource_type: CLUSTER
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: User:alice
                host: "*"
                operation: DESCRIBE
                permission: DENY

    GetBrokerConfigResponse:
      description: The broker configuration parameter.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerConfigData"
          example:
            kind: KafkaBrokerConfig
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs/compression.type
              resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
            cluster_id: cluster-1
            broker_id: 1
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_BROKER_CONFIG
            synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_BROKER_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG

    GetBrokerResponse:
      description: The broker.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerData"
          example:
            kind: KafkaBroker
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              resource_name: crn:///kafka=cluster-1/broker=1
            cluster_id: cluster-1
            broker_id: 1
            host: localhost
            port: 9291
            configs:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs
            partition_replicas:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/partition-replicas

    GetClusterConfigResponse:
      description: The cluster configuration parameter.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClusterConfigData"
          example:
            kind: KafkaClusterConfig
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs/compression.type
              resource_name: crn:///kafka=cluster-1/broker-config=compression.type
            cluster_id: cluster-1
            config_type: BROKER
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_DEFAULT_BROKER_CONFIG
            synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG

    GetClusterResponse:
      description: The Kafka cluster.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClusterData"
          example:
            kind: KafkaCluster
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1
              resource_name: crn:///kafka=cluster-1
            cluster_id: cluster-1
            controller:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
            acls:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls
            brokers:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers
            broker_configs:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs
            consumer_groups:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups
            topics:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics
            partition_reassignments:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/-/partitions/-/reassignment

    GetConsumerAssignmentResponse:
      description: The consumer group assignment.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerAssignmentData"
          example:
            kind: KafkaConsumerAssignment
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            consumer_id: consumer-1
            topic_name: topic-1
            partition_id: 1
            partition:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1
            lag:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/1

    GetConsumerGroupResponse:
      description: The consumer group.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerGroupData"
          example:
            kind: KafkaConsumerGroup
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            is_simple: false
            partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
            state: STABLE
            coordinator:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
            consumers:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
            lag_summary:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lag-summary

    GetConsumerGroupLagSummaryResponse:
      description: The max and total consumer lag in a consumer group.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerGroupLagSummaryData"
          example:
            kind: KafkaConsumerGroupLagSummary
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lag-summary
              resource_name: crn:///kafka=cluster-1/consumer-groups=consumer-group-1/lag-summary
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            max_lag_consumer_id: consumer-1
            max_lag_instance_id: consumer-instance-1
            max_lag_client_id: client-1
            max_lag_topic_name: topic-1
            max_lag_partition_id: 1
            max_lag: 100
            total_lag: 110
            max_lag_consumer:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
            max_lag_partition:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1

    GetConsumerLagResponse:
      description: The consumer lag.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerLagData"
          example:
            kind: KafkaConsumerLag
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/lag=topic-1/partition=1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            topic_name: topic-1
            partition_id: 1
            consumer_id: consumer-1
            instance_id: consumer-instance-1
            client_id: client-1
            current_offset: 1
            log_end_offset: 101
            lag: 100

    GetConsumerResponse:
      description: The consumer.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerData"
          example:
            kind: KafkaConsumer
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
              resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
            cluster_id: cluster-1
            consumer_group_id: consumer-group-1
            consumer_id: consumer-1
            instance_id: consumer-instance-1
            client_id: client-1
            assignments:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments

    GetPartitionResponse:
      description: The partition
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PartitionData"
          example:
            kind: KafkaPartition
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            leader:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
            replicas:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
            reassignment:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment

    GetReassignmentResponse:
      description: The ongoing replicas reassignments.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReassignmentData"
          example:
            kind: KafkaReassignment
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            adding_replicas:
              - 1
              - 2
            removing_replicas:
              - 3
            replicas:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas

    GetReplicaResponse:
      description: The replica.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReplicaData"
          example:
            kind: KafkaReplica
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
              resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
            cluster_id: cluster-1
            topic_name: topic-1
            partition_id: 1
            broker_id: 1
            is_leader: true
            is_in_sync: true
            broker:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    GetTopicConfigResponse:
      description: The topic configuration parameter.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopicConfigData"
          example:
            kind: KafkaTopicConfig
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/compression.type
              resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
            cluster_id: cluster-1
            topic_name: topic-1
            name: compression.type
            value: gzip
            is_default: false
            is_read_only: false
            is_sensitive: false
            source: DYNAMIC_TOPIC_CONFIG
            synonyms:
              - name: compression.type
                value: gzip
                source: DYNAMIC_TOPIC_CONFIG
              - name: compression.type
                value: producer
                source: DEFAULT_CONFIG

    GetTopicResponse:
      description: The topic.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopicData"
          example:
            kind: KafkaTopic
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1
              resource_name: crn:///kafka=cluster-1/topic=topic-1
            cluster_id: cluster-1
            topic_name: topic-1
            is_internal: false
            replication_factor: 3
            partitions_count: 1
            partitions:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions
            configs:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/configs
            partition_reassignments:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments

    ListAllReassignmentsResponse:
      description: The ongoing replicas reassignments.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReassignmentDataList"
          example:
            kind: KafkaReassignmentList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              next:
            data:
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                adding_replicas:
                  - 1
                  - 2
                removing_replicas:
                  - 3
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions/2/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-2/partition=2/reassignment
                cluster_id: cluster-1
                topic_name: topic-2
                partition_id: 2
                adding_replicas:
                  - 1
                removing_replicas:
                  - 2
                  - 3
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions/2/replicas
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions/3/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/reassignment
                cluster_id: cluster-1
                topic_name: topic-3
                partition_id: 3
                adding_replicas:
                  - 3
                removing_replicas:
                  - 1
                  - 2
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions/3/replicas

    ListBrokerConfigsResponse:
      description: The list of broker configs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerConfigDataList"
          example:
            kind: KafkaBrokerConfigList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs
              next:
            data:
              - kind: KafkaBrokerConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs/max.connections
                  resource_name: crn:///kafka=cluster-1/broker=1/config=max.connections
                cluster_id: cluster-1
                broker_id: 1
                name: max.connections
                value: "1000"
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_BROKER_CONFIG
                synonyms:
                  - name: max.connections
                    value: "1000"
                    source: DYNAMIC_BROKER_CONFIG
                  - name: max.connections
                    value: "2147483647"
                    source: DEFAULT_CONFIG
              - kind: KafkaBrokerConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs/compression.type
                  resource_name: crn:///kafka=cluster-1/broker=1/config=compression.type
                cluster_id: cluster-1
                broker_id: 1
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_BROKER_CONFIG
                synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_BROKER_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG

    ListBrokersResponse:
      description: The list of brokers.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerDataList"
          example:
            kind: KafkaBrokerList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers
              next:
            data:
              - kind: KafkaBroker
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                  resource_name: crn:///kafka=cluster-1/broker=1
                cluster_id: cluster-1
                broker_id: 1
                host: localhost
                port: 9291
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/configs
                partition_replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/partition-replicas
              - kind: KafkaBroker
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2
                  resource_name: crn:///kafka=cluster-1/broker=2
                cluster_id: cluster-1
                broker_id: 2
                host: localhost
                port: 9292
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2/configs
                partition_replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2/partition-replicas
              - kind: KafkaBroker
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/3
                  resource_name: crn:///kafka=cluster-1/broker=3
                cluster_id: cluster-1
                broker_id: 3
                host: localhost
                port: 9293
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/3/configs
                partition_replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/3/partition-replicas

    ListClusterConfigsResponse:
      description: The list of cluster configs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClusterConfigDataList"
          example:
            kind: KafkaClusterConfigList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs
              next:
            data:
              - kind: KafkaClusterConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs/max.connections
                  resource_name: crn:///kafka=cluster-1/broker-config=max.connections
                cluster_id: cluster-1
                config_type: BROKER
                name: max.connections
                value: "1000"
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
                synonyms:
                  - name: max.connections
                    value: "1000"
                    source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  - name: max.connections
                    value: "2147483647"
                    source: DEFAULT_CONFIG
              - kind: KafkaClusterConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs/compression.type
                  resource_name: crn:///kafka=cluster-1/broker-config=compression.type
                cluster_id: cluster-1
                config_type: BROKER
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_DEFAULT_BROKER_CONFIG
                synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_DEFAULT_BROKER_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG

    ListClustersResponse:
      description: The list of Kafka clusters.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ClusterDataList"
          example:
            kind: KafkaClusterList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters
              next:
            data:
              - kind: KafkaCluster
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1
                  resource_name: crn:///kafka=cluster-1
                cluster_id: cluster-1
                controller:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                acls:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls
                brokers:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers
                broker_configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-configs
                consumer_groups:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups
                topics:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics
                partition_reassignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/-/partitions/-/reassignment

    ListConsumerAssignmentsResponse:
      description: The list of consumer group assignments.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerAssignmentDataList"
          example:
            kind: KafkaConsumerAssignmentList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
              next:
            data:
              - kind: KafkaConsumerAssignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-1/partitions/1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=1/partition=1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                topic_name: topic-1
                partition_id: 1
                partition:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1
                lag:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/1
              - kind: KafkaConsumerAssignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-2/partitions/2
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=2/partition=2
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                topic_name: topic-2
                partition_id: 2
                partition:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions/2
                lag:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-2/partitions/2
              - kind: KafkaConsumerAssignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments/topic-3/partitions/3
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1/assignment=topic=3/partition=3
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                topic_name: topic-3
                partition_id: 3
                partition:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions/3
                lag:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-3/partitions/3

    ListConsumerGroupsResponse:
      description: The list of consumer groups.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerGroupDataList"
          example:
            kind: KafkaConsumerGroupList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups
              next:
            data:
              - kind: KafkaConsumerGroup
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                is_simple: false
                partition_assignor: org.apache.kafka.clients.consumer.RoundRobinAssignor
                state: STABLE
                coordinator:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                consumers:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
                lag_summary:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lag-summary
              - kind: KafkaConsumerGroup
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-2
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-2
                cluster_id: cluster-1
                consumer_group_id: consumer-group-2
                is_simple: false
                partition_assignor: org.apache.kafka.clients.consumer.StickyAssignor
                state: PREPARING_REBALANCE
                coordinator:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2
                consumers:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-2/consumers
                lag_summary:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-2/lag-summary
              - kind: KafkaConsumerGroup
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-3
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-3
                cluster_id: cluster-1
                consumer_group_id: consumer-group-3
                is_simple: false
                partition_assignor: org.apache.kafka.clients.consumer.RangeAssignor
                state: DEAD
                coordinator:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/3
                consumers:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-3/consumers
                lag_summary:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-3/lag-summary

    ListConsumerLagsResponse:
      description: The list of consumer lags.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerLagDataList"
          example:
            kind: KafkaConsumerLagList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags
              next:
            data:
              - kind: KafkaConsumerLag
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/lag=topic-1/partition=1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                topic_name: topic-1
                partition_id: 1
                consumer_id: consumer-1
                instance_id: consumer-instance-1
                client_id: client-1
                current_offset: 1
                log_end_offset: 101
                lag: 100
              - kind: KafkaConsumerLag
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/2
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/lag=topic-1/partition=2
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                topic_name: topic-1
                partition_id: 2
                consumer_id: consumer-2
                instance_id: consumer-instance-2
                client_id: client-2
                current_offset: 1
                log_end_offset: 11
                lag: 10
              - kind: KafkaConsumerLag
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/lags/topic-1/partitions/3
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/lag=topic-1/partition=3
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                topic_name: topic-1
                partition_id: 3
                consumer_id: consumer-3
                instance_id: consumer-instance-3
                client_id: client-3
                current_offset: 1
                log_end_offset: 1
                lag: 0

    ListConsumersResponse:
      description: The list of consumers.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ConsumerDataList"
          example:
            kind: KafkaConsumerList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers
              next:
            data:
              - kind: KafkaConsumer
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-1
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-1
                instance_id: consumer-instance-1
                client_id: client-1
                assignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-1/assignments
              - kind: KafkaConsumer
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-2
                instance_id: consumer-instance-2
                client_id: client-2
                assignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments
              - kind: KafkaConsumer
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2
                  resource_name: crn:///kafka=cluster-1/consumer-group=consumer-group-1/consumer=consumer-2
                cluster_id: cluster-1
                consumer_group_id: consumer-group-1
                consumer_id: consumer-2
                instance_id: consumer-instance-2
                client_id: client-2
                assignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/consumer-groups/consumer-group-1/consumers/consumer-2/assignments

    ListPartitionsResponse:
      description: The list of partitions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PartitionDataList"
          example:
            kind: KafkaPartitionList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions
              next:
            data:
              - kind: KafkaPartition
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                leader:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
                reassignment:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
              - kind: KafkaPartition
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 2
                leader:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/2
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
                reassignment:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
              - kind: KafkaPartition
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 3
                leader:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas/3
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas
                reassignment:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment

    ListReplicasResponse:
      description: The list of replicas.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReplicaDataList"
          example:
            kind: KafkaReplicaList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              next:
            data:
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=1
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                broker_id: 1
                is_leader: true
                is_in_sync: true
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/2
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=2
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                broker_id: 2
                is_leader: false
                is_in_sync: true
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas/3
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/replica=3
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                broker_id: 3
                is_leader: false
                is_in_sync: false
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/3

    ListTopicConfigsResponse:
      description: The list of cluster configs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopicConfigDataList"
          example:
            kind: KafkaTopicConfigList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/configs
              next:
            data:
              - kind: KafkaTopicConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/configs/cleanup.policy
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/config=cleanup.policy
                cluster_id: cluster-1
                topic_name: topic-1
                name: cleanup.policy
                value: compact
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_TOPIC_CONFIG
                synonyms:
                  - name: cleanup.policy
                    value: compact
                    source: DYNAMIC_TOPIC_CONFIG
                  - name: cleanup.policy
                    value: delete
                    source: DEFAULT_CONFIG
              - kind: KafkaTopicConfig
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/configs/compression.type
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/config=compression.type
                cluster_id: cluster-1
                topic_name: topic-1
                name: compression.type
                value: gzip
                is_default: false
                is_read_only: false
                is_sensitive: false
                source: DYNAMIC_TOPIC_CONFIG
                synonyms:
                  - name: compression.type
                    value: gzip
                    source: DYNAMIC_TOPIC_CONFIG
                  - name: compression.type
                    value: producer
                    source: DEFAULT_CONFIG
              # Currently the aggregator script doesn't merge correctly some
              # otherwise identical parts of duplicate components defined in
              # both kafka-rest and ce-kafka-rest's OpenAPI specs.
              # In some cases this can be handled by slightly tweaking the
              # input specs, but in other cases this requires manual
              # intervention in the consolidated specs after the generation.
              # We should eventually fix the aggregator script, but in the
              # meantime, we should be careful during reviews, making sure
              # that comments like this do not get replaced by wrongly
              # merged autogenerated content.
              # See https://github.com/confluentinc/ce-kafka-rest/pull/227.

    ListTopicsResponse:
      description: The list of topics.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopicDataList"
          example:
            kind: KafkaTopicList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics
              next:
            data:
              - kind: KafkaTopic
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1
                cluster_id: cluster-1
                topic_name: topic-1
                is_internal: false
                replication_factor: 3
                partitions_count: 1
                partitions:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/configs
                partition_reassignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/-/reassignments
              - kind: KafkaTopic
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2
                  resource_name: crn:///kafka=cluster-1/topic=topic-2
                cluster_id: cluster-1
                topic_name: topic-2
                is_internal: true
                replication_factor: 4
                partitions_count: 1
                partitions:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/configs
                partition_reassignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions/-/reassignments
              - kind: KafkaTopic
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3
                  resource_name: crn:///kafka=cluster-1/topic=topic-3
                cluster_id: cluster-1
                topic_name: topic-3
                is_internal: false
                replication_factor: 5
                partitions_count: 1
                partitions:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions
                configs:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/configs
                partition_reassignments:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions/-/reassignments

    ProduceResponse:
      description: |-
        The response containing a delivery report for a record produced to a topic. In streaming mode,
        for each record sent, a separate delivery report will be returned, in the same order,
        each with its own error_code.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProduceResponse"
          examples:
            produce_record_success:
              description: The record was successfully produced to the topic.
              value:
                error_code: 200
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                offset: 0
                timestamp: "2021-02-05T19:14:42Z"
                key:
                  type: BINARY
                  size: 7
                value:
                  type: JSON
                  size: 15
            produce_record_bad_binary_data:
              description: Thrown when sending a BINARY value which is not a base64-encoded string.
              value:
                error_code: 400
                message: "Bad Request: data=1 is not a base64 string."

    SearchAclsResponse:
      description: The list of ACLs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AclDataList"
          example:
            kind: KafkaAclList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls?principal=User%3Aalice
            data:
              - kind: KafkaAcl
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls?resource_type=TOPIC&resource_name=topic-&pattern_type=PREFIXED&principal=User%3Aalice&host=*&operation=ALL&permission=ALLOW
                cluster_id: cluster-1
                resource_type: TOPIC
                resource_name: topic-
                pattern_type: PREFIXED
                principal: User:alice
                host: "*"
                operation: ALL
                permission: ALLOW
              - kind: KafkaAcl
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/acls?resource_type=CLUSTER&resource_name=kafka-cluster&pattern_type=LITERAL&principal=User%3Aalice&host=*&operation=DESCRIBE&permission=DENY
                cluster_id: cluster-1
                resource_type: CLUSTER
                resource_name: kafka-cluster
                pattern_type: LITERAL
                principal: User:alice
                host: "*"
                operation: DESCRIBE
                permission: DENY

    SearchReassignmentsByTopicResponse:
      description: The ongoing replicas reassignments.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReassignmentDataList"
          example:
            kind: KafkaReassignmentList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/-/partitions/-/reassignment
              next:
            data:
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=1/reassignment
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 1
                adding_replicas:
                  - 1
                  - 2
                removing_replicas:
                  - 3
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/1/replicas
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/reassignment
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 2
                adding_replicas:
                  - 1
                removing_replicas:
                  - 2
                  - 3
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas
              - kind: KafkaReassignment
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3/reassignment
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=3/reassignment
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 3
                adding_replicas:
                  - 3
                removing_replicas:
                  - 1
                  - 2
                replicas:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/3/replicas

    SearchReplicasByBrokerResponse:
      description: The list of replicas.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReplicaDataList"
          example:
            kind: KafkaReplicaList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/partition-replicas
              next:
            data:
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-1/partitions/2/replicas/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-1/partition=2/replica=1
                cluster_id: cluster-1
                topic_name: topic-1
                partition_id: 2
                broker_id: 1
                is_leader: true
                is_in_sync: true
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-2/partitions/3/replicas/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=3/replica=1
                cluster_id: cluster-1
                topic_name: topic-2
                partition_id: 3
                broker_id: 1
                is_leader: false
                is_in_sync: true
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaReplica
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/topics/topic-3/partitions/1/replicas/1
                  resource_name: crn:///kafka=cluster-1/topic=topic-3/partition=1/replica=1
                cluster_id: cluster-1
                topic_name: topic-3
                partition_id: 1
                broker_id: 1
                is_leader: false
                is_in_sync: false
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    # Error responses

    BadRequestErrorResponse:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            bad_request_cannot_deserialize:
              description: Thrown when trying to deserialize an integer from non-integer data.
              value:
                error_code: 400
                message:
                  'Cannot deserialize value of type `java.lang.Integer` from String "A": not a valid
                  `java.lang.Integer` value'

            unsupported_version_exception:
              description:
                Thrown when the version of this API is not supported in the underlying Kafka
                cluster.
              value:
                error_code: 40035
                message: The version of this API is not supported in the underlying Kafka cluster.

    BadRequestErrorResponse_CreateAcls:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            create_acls_cluster_name_invalid:
              description:
                Thrown when creating an ACL for a CLUSTER resource specifying the wrong resource
                name.
              value:
                error_code: 40002
                message: The only valid name for the CLUSTER resource is kafka-cluster"

    BadRequestErrorResponse_CreateTopic:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            create_topic_already_exists:
              description:
                Thrown when trying to create a topic with a name already used by an existing topic.
              value:
                error_code: 40002
                message: Topic 'my-topic' already exists.
            create_topic_replication_factor_too_large:
              description:
                Thrown when trying to create a topic with a replication factor larger than the
                number of brokers.
              value:
                error_code: 40002
                message: "Replication factor: 2 larger than available brokers: 1."

    BadRequestErrorResponse_DeleteAcls:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            delete_acls_unspecified_resource_type:
              description:
                Thrown when trying to delete ACLs without specifying a valid resource type.
              value:
                error_code: 400
                message: resource_type cannot be unspecified or UNKNOWN

    BadRequestErrorResponse_ProduceRecords:
      description:
        "Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            header_not_base64_encoded:
              description: "Thrown when headers in the produce-record are not base64 encoded."
              value:
                error_code: 400
                message:
                  'Cannot deserialize value of type `byte[]` from String "": Unexpected end of
                  base64-encoded String: base64 variant ''MIME-NO-LINEFEEDS'' expects padding (one
                  or more ''='' characters) at the end. This Base64Variant might have been
                  incorrectly configured'

    UnprocessableEntity_ProduceRecord:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            produce_record_empty_request_body:
              description: Thrown when the request body is empty.
              value:
                error_code: 422
                message: Payload error. Request body is empty. Data is required.

    BadRequestErrorResponse_UpdatePartitionCountTopic:
      description:
        Indicates a bad request error. It could be caused by an unexpected request body format or
        other forms of request validation failure.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            topic_update_partitions_invalid:
              description: Thrown when trying to update the number of partitions incorrectly.
              value:
                error_code: 40002
                message: Topic already has 1 partitions.

    UnauthorizedErrorResponse:
      description:
        Indicates a client authentication error. Kafka authentication failures will contain error
        code 40101 in the response body.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            kafka_authentication_failed:
              description: Thrown when using Basic authentication with wrong Kafka credentials.
              value:
                error_code: 40101
                message: Authentication failed

    ForbiddenErrorResponse:
      description:
        Indicates a client authorization error. Kafka authorization failures will contain error code
        40301 in the response body.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            kafka_authorization_failed:
              description:
                Thrown when the caller is not authorized to perform the underlying operation.
              value:
                error_code: 40301
                message: Request is not authorized

    NotFoundErrorResponse:
      description:
        Indicates attempted access to an unreachable or non-existing resource like e.g. an unknown
        topic or partition. GET requests to endpoints not allowed in the accesslists will also
        result in this response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            endpoint_not_found:
              description: Thrown for generic HTTP 404 errors.
              value:
                error_code: 404
                message: HTTP 404 Not Found
            cluster_not_found:
              description: Thrown when using a non-existing cluster ID.
              value:
                error_code: 404
                message: Cluster my-cluster cannot be found.
            unknown_topic_or_partition:
              description: Thrown when using a non-existing topic name or partition ID.
              value:
                error_code: 40403
                message: This server does not host this topic-partition.

    TooManyRequestsErrorResponse:
      description:
        Indicates that a rate limit threshold has been reached, and the client should retry again
        later.
      content:
        text/html:
          schema:
            type: string
          example:
            description: A sample response from Jetty's DoSFilter.
            value:
              <html> <head> <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
              <title>Error 429 Too Many Requests</title> </head> <body> <h2>HTTP ERROR 429 Too Many
              Requests</h2> <table> <tr> <th>URI:</th> <td>/v3/clusters/my-cluster</td> </tr> <tr>
              <th>STATUS:</th> <td>429</td> </tr> <tr> <th>MESSAGE:</th> <td>Too Many Requests</td>
              </tr> <tr> <th>SERVLET:</th> <td>default</td> </tr> </table> </body> </html>

    RequestEntityTooLargeErrorResponse:
      description:
        "This implies the client is sending a request payload that is larger than the maximum
        message size the server can accept."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            produce_records_expects_json:
              description: "Thrown by /records API if payload size exceeds the message max size"
              value:
                error_code: 413
                message:
                  "The request included a message larger than the maximum message size the server
                  can accept."

    UnsupportedMediaTypeErrorResponse:
      description:
        "This implies the client is sending the request payload format in an unsupported format."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            produce_records_expects_json:
              description:
                "Thrown by /records API if payload format content-type doesn't match expected
                application/json"
              value:
                error_code: 415
                message: "HTTP 415 Unsupported Media Type"

    ServerErrorResponse:
      description:
        A server-side problem that might not be addressable from the client side. Retriable Kafka
        errors will contain error code 50003 in the response body.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            generic_internal_server_error:
              description: Thrown for generic HTTP 500 errors.
              value:
                error_code: 500
                message: Internal Server Error

    ListReplicaStatusResponse:
      description: The list of Replica Statuses.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReplicaStatusDataList"
          example:
            kind: KafkaReplicaStatusList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/topics/topic_1/partitions/0/replica-status
              resource_name:
            data:
              - kind: KafkaReplicaStatus
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/topics/topic-1/partitions/0/brokers/1/replica-status
                cluster_id: cluster-1
                topic_name: topic-1
                broker_id: 1
                partition_id: 0
                is_leader: true
                is_observer: false
                is_isr_eligible: true
                is_in_isr: true
                is_caught_up: true
                log_start_offset: 0
                log_end_offset: 0
                last_caught_up_time_ms: 100
                last_fetch_time_ms: 200
                link_name: test-link
              - kind: KafkaReplicaStatus
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/topics/topic-1/partitions/0/brokers/2/replica-status
                cluster_id: cluster-1
                topic_name: topic-1
                broker_id: 2
                partition_id: 0
                is_leader: false
                is_observer: false
                is_isr_eligible: true
                is_in_isr: true
                is_caught_up: true
                log_start_offset: 0
                log_end_offset: 0
                last_caught_up_time_ms: 100
                last_fetch_time_ms: 200
                link_name: test-link

    GetAnyUnevenLoadResponse:
      description: The AnyUnevenLoad status
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AnyUnevenLoadData"
          example:
            kind: KafkaAnyUnevenLoad
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/any-uneven-load
              resource_name: crn:///kafka=cluster-1/any-uneven-load
            cluster_id: cluster-1
            status: BALANCING
            previous_status: BALANCING_FAILED
            status_updated_at: "2019-10-12T07:20:50Z"
            previous_status_updated_at: "2019-10-12T07:20:35Z"
            error_code: 10013
            error_message:
              The Confluent Balancer operation was overridden by a higher priority operation.
            broker_tasks:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/-/tasks

    GetBalancerStatusResponse:
      description: The balancer status
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BalancerStatusData"
          example:
            kind: KafkaBalancerStatus
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/balancer
              resource_name: crn:///kafka=cluster-1/balancer
            cluster_id: cluster-1
            status: ERROR
            error_code: 10014
            error_message:
              The Confluent Balancer failed to start as JBOD is enabled for the cluster.
            any_uneven_load:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/even-cluster-load
            broker_tasks:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/-/tasks

    GetBrokerRemovalResponse:
      description: The single broker removal response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerRemovalData"
          example:
            kind: KafkaBrokerRemoval
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              resource_name: crn:///kafka=cluster-1/broker=1/
            cluster_id: cluster-1
            broker_id: 1
            broker_task:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
            broker:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    ListBrokerRemovalResponse:
      description: The multiple broker removal response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerRemovalDataList"
          example:
            kind: KafkaBrokerRemovalList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers:delete
              next:
            data:
              - kind: KafkaBrokerRemoval
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                  resource_name: crn:///kafka=cluster-1/broker=1/
                cluster_id: cluster-1
                broker_id: 1
                broker_task:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaBrokerRemoval
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                  resource_name: crn:///kafka=cluster-1/broker=1/
                cluster_id: cluster-1
                broker_id: 1
                broker_task:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    GetBrokerTaskResponse:
      description: The broker task
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerTaskData"
          example:
            kind: KafkaBrokerTask
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/tasks/add-broker
              resource_name: crn:///kafka=cluster-1/broker=1/task=1
            cluster_id: cluster-1
            broker_id: 1
            task_type: add-broker
            task_status: FAILED
            sub_task_statuses:
              partition_reassignment_status: ERROR
            created_at: "2019-10-12T07:20:50Z"
            updated_at: "2019-10-12T07:20:55Z"
            error_code: 10013
            error_message:
              The Confluent Balancer operation was overridden by a higher priority operation
            broker:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    ListBrokerTaskResponse:
      description: The list of tasks.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerTaskDataList"
          example:
            kind: KafkaBrokerTaskList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/-/tasks
              next:
            data:
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/tasks/add-broker
                  resource_name: crn:///kafka=cluster-1/broker=1/task=add-broker
                cluster_id: cluster_id
                broker_id: 1
                task_type: add-broker
                task_status: SUCCESS
                sub_task_statuses:
                  partition_reassignment_status: COMPLETED
                created_at: "2019-10-12T10:20:40Z"
                updated_at: "2019-10-12T10:20:45Z"
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2/tasks/remove-broker
                  resource_name: crn:///kafka=cluster-1/broker=2/task=remove-broker
                cluster_id: cluster_id
                broker_id: 2
                task_type: remove-broker
                task_status: FAILED
                shutdown_scheduled: true
                sub_task_statuses:
                  broker_replica_exclusion_status: COMPLETED
                  partition_reassignment_status: ERROR
                  broker_shutdown_status: CANCELED
                created_at: "2019-10-12T07:20:50Z"
                updated_at: "2019-10-12T07:20:55Z"
                error_code: 10006
                error_message:
                  Error while computing the initial remove broker plan for brokers [2] prior to
                  shutdown.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    ListBrokerTaskByBrokerResponse:
      description: The list of tasks.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerTaskDataList"
          example:
            kind: KafkaBrokerTaskList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/-/tasks
              next:
            data:
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/tasks/add-broker
                  resource_name: crn:///kafka=cluster-1/broker=1/task=add-broker
                cluster_id: cluster_id
                broker_id: 1
                task_type: add-broker
                task_status: IN_PROGRESS
                sub_task_statuses:
                  partition_reassignment_status: IN_PROGRESS
                created_at: "2019-10-12T07:20:50Z"
                updated_at: "2019-10-12T07:20:55Z"
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/tasks/remove-broker
                  resource_name: crn:///kafka=cluster-1/broker=1/task=remove-broker
                cluster_id: cluster_id
                broker_id: 1
                task_type: remove-broker
                task_status: FAILED
                shutdown_scheduled: false
                sub_task_statuses:
                  broker_replica_exclusion_status: EXCLUDED
                  partition_reassignment_status: ERROR
                  broker_shutdown_status: CANCELED
                created_at: "2019-10-12T07:20:50Z"
                updated_at: "2019-10-12T07:20:55Z"
                error_code: 10006
                error_message:
                  Error while computing the initial remove broker plan for brokers [1] prior to
                  shutdown.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    ListBrokerTaskByTaskTypeResponse:
      description: The list of tasks.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerTaskDataList"
          example:
            kind: KafkaBrokerTaskList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/-/tasks
              next:
            data:
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1/tasks/add-broker
                  resource_name: crn:///kafka=cluster-1/broker=1/task=add-broker
                cluster_id: cluster_id
                broker_id: 1
                task_type: add-broker
                task_status: IN_PROGRESS
                sub_task_statuses:
                  partition_reassignment_status: IN_PROGRESS
                created_at: "2019-10-12T07:20:50Z"
                updated_at: "2019-10-12T07:20:55Z"
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2/tasks/add-broker
                  resource_name: crn:///kafka=cluster-1/broker=2/task=add-broker
                cluster_id: cluster_id
                broker_id: 2
                task_type: add-broker
                task_status: FAILED
                sub_task_statuses:
                  partition_reassignment_status: ERROR
                created_at: "2019-10-12T07:20:50Z"
                updated_at: "2019-10-12T07:20:55Z"
                error_code: 10006
                error_message: Error while computing the initial add broker plan for brokers [2]
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    ListBrokerReplicaExclusionResponse:
      description: The list of broker replica exclusions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerReplicaExclusionDataList"
          example:
            kind: KafkaBrokerReplicaExclusionList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions
              next:
            data:
              - kind: KafkaBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/1
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=1
                cluster_id: cluster-1
                broker_id: 1
                reason: Broker is to be removed.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/2
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=2
                cluster_id: cluster-1
                broker_id: 2
                reason: Broker is to be removed.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    GetBrokerReplicaExclusionResponse:
      description: A Broker Replica Exclusion.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BrokerReplicaExclusionData"
          example:
            kind: KafkaBrokerReplicaExclusion
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/1
              next:
            cluster_id: cluster-1
            broker_id: 1
            reason: Broker is to be removed.
            broker:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    ListCreateBrokerReplicaExclusionResponse:
      description: The list of alter broker replica exclusions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterBrokerReplicaExclusionDataList"
          example:
            kind: KafkaAlterBrokerReplicaExclusionList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions
              next:
            data:
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/1
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=1
                cluster_id: cluster-1
                broker_id: 1
                exclusion: SET
                reason: Broker is to be removed.
                error_code:
                error_message:
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/2
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=2
                cluster_id: cluster-1
                broker_id: 2
                exclusion: SET
                reason: Broker is to be removed.
                error_code:
                error_message:
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    ListDeleteBrokerReplicaExclusionResponse:
      description: The list of alter broker replica exclusions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterBrokerReplicaExclusionDataList"
          example:
            kind: KafkaAlterBrokerReplicaExclusionList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions
              next:
            data:
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/1
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=1
                cluster_id: cluster-1
                broker_id: 1
                exclusion: DELETE
                reason: Broker removal is completed.
                error_code:
                error_message:
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/2
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=2
                cluster_id: cluster-1
                broker_id: 2
                exclusion: DELETE
                reason: Broker removal is completed.
                error_code:
                error_message:
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    ListDeleteBrokerReplicaExclusionErrorResponse:
      description: The list of alter broker replica exclusions.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterBrokerReplicaExclusionDataList"
          example:
            kind: KafkaAlterBrokerReplicaExclusionList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions
              next:
            data:
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/1
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=1
                cluster_id: cluster-1
                broker_id: 1
                exclusion: DELETE
                reason: Broker removal is completed.
                error_code: 404
                error_message: No replica exclusion for broker 1 was present.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaAlterBrokerReplicaExclusion
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/broker-replica-exclusions/2
                  resource_name: crn:///kafka=cluster-1/broker-replica-exclusions=2
                cluster_id: cluster-1
                broker_id: 2
                exclusion: DELETE
                reason: Broker removal is completed.
                error_code:
                error_message:
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    GetRemoveBrokerTaskResponse:
      description: The remove broker task.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RemoveBrokerTaskData"
          example:
            kind: KafkaRemoveBrokerTask
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/remove-broker-tasks/1
              resource_name: crn:///kafka=cluster-1/remove-broker-task=1
            cluster_id: cluster-1
            broker_id: 1
            shutdown_scheduled: false
            broker_replica_exclusion_status: COMPLETED
            partition_reassignment_status: FAILED
            broker_shutdown_status: CANCELED
            error_code: 10006
            error_message:
              Error while computing the initial remove broker plan for brokers [1] prior to
              shutdown.
            broker:
              related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1

    ListRemoveBrokerTaskResponse:
      description: The list of remove broker tasks.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RemoveBrokerTaskDataList"
          example:
            kind: KafkaRemoveBrokerTaskList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/remove-broker-tasks
              next:
            data:
              - kind: KafkaRemoveBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/remove-broker-tasks/1
                  resource_name: crn:///kafka=cluster-1/remove-broker-task=1
                cluster_id: cluster-1
                broker_id: 1
                shutdown_scheduled: true
                broker_replica_exclusion_status: COMPLETED
                partition_reassignment_status: FAILED
                broker_shutdown_status: CANCELED
                error_code: 10006
                error_message:
                  Error while computing the initial remove broker plan for brokers [1] prior to
                  shutdown.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/1
              - kind: KafkaRemoveBrokerTask
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/remove-broker-tasks/2
                  resource_name: crn:///kafka=cluster-1/remove-broker-task=2
                cluster_id: cluster-1
                broker_id: 2
                shutdown_scheduled: true
                broker_replica_exclusion_status: EXCLUDED
                partition_reassignment_status: FAILED
                broker_shutdown_status: CANCELED
                error_code: 10006
                error_message:
                  Error while computing the initial remove broker plan for brokers [2] prior to
                  shutdown.
                broker:
                  related: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/brokers/2

    NoContentResponse:
      description: Operation succeeded, no content in the response

    ListLinksResponse:
      description: A list of link names and properties
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListLinksResponseDataList"
          example:
            kind: KafkaLinkDataList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links
              next:
            data:
              - kind: KafkaLinkData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-1
                  resource_name:
                source_cluster_id: src-cluster-id
                link_name: my-new-link-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                cluster_link_id: eEBkTffYSESld6EO898x3w
                topic_names:
                  - topic-sb-1
                  - topic-sb-2
                link_state: ACTIVE
              - kind: KafkaLinkData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-2
                  resource_name:
                remote_cluster_id: src-cluster-id
                link_name: my-new-link-2
                link_id: f749116e-f847-4bd2-b1f6-5c4e518a0678
                cluster_link_id: 90kRbvhHS9Kx9lxOUYoGeA
                topic_names:
                  - topic-db-1
                  - topic-db-2
                link_state: UNAVAILABLE
                link_error: AUTHENTICATION_ERROR
                link_error_message: Please check your api key and secret
              - kind: KafkaLinkData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/CIL-69l7S1CwoVNAhoQLug/links/my-new-link-3
                  resource_name:
                destination_cluster_id: dest-cluster-id
                link_name: my-new-link-3
                link_id: 9cd1711e-a4ef-4390-a35e-dfd758d97a82
                cluster_link_id: nNFxHqTvQ5CjXt_XWNl6gg
                topic_names: []
                link_state: ACTIVE

    GetLinkResponse:
      description: Single link name and properties
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListLinksResponseData"
          examples:
            link_at_destination_cluster:
              description: Link at destination cluster
              value:
                kind: KafkaLinkData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/my-new-link-1
                resource_name:
                source_cluster_id: src-cluster-id
                link_name: my-new-link-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                cluster_link_id: eEBkTffYSESld6EO898x3w
                topic_names:
                  - topic-db-1
                  - topic-db-2
            link_at_source_cluster:
              description: Link at source cluster
              value:
                kind: KafkaLinkData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/my-new-link-1
                resource_name:
                destination_cluster_id: dst-cluster-id
                link_name: my-new-link-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
                cluster_link_id: eEBkTffYSESld6EO898x3w
                topic_names: []

    ListLinkConfigsResponse:
      description: Config name and value
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListLinkConfigsResponseDataList"
          example:
            kind: KafkaLinkConfigDataList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/v-0Ce-CkTyKQol9v46LaCQ/links/link-nb-1/configs
              next:
            data:
              - kind: KafkaLinkConfigData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                  resource_name:
                cluster_id: 1Rh_4htxSuen7RYGvGmgNw
                name: consumer.offset.sync.ms
                value: "3825940"
                default: false
                read_only: false
                sensitive: false
                source: DYNAMIC_CLUSTER_LINK_CONFIG
                synonyms:
                  - cosm
                link_name: link-db-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
              - kind: KafkaLinkConfigData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
                  resource_name:
                cluster_id: 1Rh_4htxSuen7RYGvGmgNw
                name: acl.sync.ms
                value: "5000"
                default: false
                read_only: false
                sensitive: false
                source: DYNAMIC_CLUSTER_LINK_CONFIG
                synonyms:
                  - asm
                link_name: link-db-1
                link_id: 7840644d-f7d8-4844-a577-a10ef3df31df

    GetLinkConfigsResponse:
      description: Config name and value
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListLinkConfigsResponseData"
          example:
            kind: KafkaLinkConfigData
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/1Rh_4htxSuen7RYGvGmgNw/links/my-new-link-1
              resource_name:
            cluster_id: 1Rh_4htxSuen7RYGvGmgNw
            name: consumer.offset.sync.ms
            value: "3825940"
            default: false
            read_only: false
            sensitive: false
            source: DYNAMIC_CLUSTER_LINK_CONFIG
            synonyms:
              - cosm
            link_name: link-db-1
            link_id: 7840644d-f7d8-4844-a577-a10ef3df31df
            topics:
              - topic-db-1
              - topic-db-2

    ListMirrorTopicsResponse:
      description: Metadata of mirror topics
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListMirrorTopicsResponseDataList"
          example:
            kind: KafkaMirrorDataList
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/link/link-1/mirrors
              resource_name: crn:///kafka=cluster-1
              next:
            data:
              - kind: KafkaMirrorData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/link-1/mirrors/topic-1
                  resource_name: crn:///kafka=cluster-1
                link_name: link-sb-1
                resource_name: crn:///kafka=cluster-1
                mirror_topic_name: topic-1
                source_topic_name: topic-1
                num_partitions: 3
                mirror_lags:
                  - partition: 0
                    lag: 0
                    last_source_fetch_offset: 0
                  - partition: 1
                    lag: 10000
                    last_source_fetch_offset: 1000
                  - partition: 2
                    lag: 40000
                    last_source_fetch_offset: 12030
                mirror_status: ACTIVE
                state_time_ms: 1612550939300
              - kind: KafkaMirrorData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/Fds7TcT9TTqEXsoRLEKMcQ/links/link-1/mirrors/topic-2
                  resource_name: crn:///kafka=cluster-1
                link_name: link-sb-2
                resource_name: crn:///kafka=cluster-1
                mirror_topic_name: topic-2
                source_topic_name: topic-2
                num_partitions: 3
                mirror_lags:
                  - partition: 0
                    lag: 0
                    last_source_fetch_offset: 0
                  - partition: 1
                    lag: 10000
                    last_source_fetch_offset: 1000
                  - partition: 2
                    lag: 40000
                    last_source_fetch_offset: 12030
                mirror_status: STOPPED
                state_time_ms: 1612551353640

    DescribeMirrorTopicResponse:
      description: Metadata of the mirror topic
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ListMirrorTopicsResponseData"
          example:
            kind: KafkaMirrorData
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/link/link-1/mirrors/topic-1
              resource_name: crn:///kafka=cluster-1
            link_name: link-sb-1
            mirror_topic_name: topic-1
            source_topic_name: topic-1
            num_partitions: 3
            mirror_lags:
              - partition: 0
                lag: 0
                last_source_fetch_offset: 0
              - partition: 1
                lag: 10000
                last_source_fetch_offset: 1000
              - partition: 2
                lag: 40000
                last_source_fetch_offset: 12030
            mirror_status: ACTIVE
            state_time_ms: 1612550939300

    AlterMirrorStatusResponse:
      description: Mirror status alternation result
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlterMirrorStatusResponseDataList"
          example:
            kind: KafkaPromoteMirror
            metadata:
              self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/links/link-1/mirrors
              resource_name: crn:///kafka=cluster-1
            data:
              - kind: AlterMirrorsData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-1
                  resource: crn:///kafka=cluster-1
                mirror_topic_name: topic-sb
                error_code:
                error_message:
                mirror_lags:
                  - partition: 0
                    lag: 0
                    last_source_fetch_offset: 0
                  - partition: 1
                    lag: 10000
                    last_source_fetch_offset: 1000
                  - partition: 2
                    lag: 40000
                    last_source_fetch_offset: 12030
              - kind: AlterMirrorsData
                metadata:
                  self: https://pkc-00000.region.provider.confluent.cloud/kafka/v3/clusters/cluster-1/links/my-new-link-1/mirrors/topic-2
                  resource: crn:///kafka=cluster-1
                mirror_topic_name: topic-2
                error_code: 400
                error_message: Topic 'topic-2' has already stopped its mirror from 'my-new-link-1'
                mirror_lags:
                  - partition: 0
                    lag: 0
                    last_source_fetch_offset: 0
                  - partition: 1
                    lag: 10000
                    last_source_fetch_offset: 1000
                  - partition: 2
                    lag: 40000
                    last_source_fetch_offset: 12030

    BadBrokerOrBalancerRequestErrorResponse:
      description: Bad broker or balancer request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            IllegalBrokerRemoval:
              value:
                error_code: 400
                message:
                  "Cannot remove broker 1 as there are partitions with replication factor equal to 1
                  on the broker. One such partition: test_topic_partition_0."
            BalancerOffline:
              value:
                error_code: 400
                message: The Confluent Balancer component is disabled or not started yet.

    BalancerOfflineErrorResponse:
      description: Balancer offline
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 400
            message: The Confluent Balancer component is disabled or not started yet.

    BrokerNotFoundErrorResponse:
      description: Broker not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 404
            message: "Broker not found. Broker: 1 not found in the cluster: cluster-1"

    UnrepresentableBrokerErrorResponse:
      description: Unrepresentable broker id.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 400
            message: The given broker id -10 is invalid

    BalancerNotEnabledErrorResponse:
      description: Confluent Balancer disabled or not started.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 500
            message: The Confluent Balancer component is disabled or not started yet.

    ClusterAuthorizationErrorResponse:
      description: Operation not authorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 401
            message: "Not authorized: the authenticated user didn't have the right\
              \ access to the resource."

    ClusterLinkNotFoundErrorResponse:
      description: The cluster link doesn't exist.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 404
            message: The cluster link doesn't exist.

    InvalidClusterLinkErrorResponse:
      description: The cluster link doesn't exist.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 400
            message: Invalid Cluster Link Name.

    InvalidConfigNameErrorResponse:
      description: Invalid Config Name.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 400
            message: Invalid Config Name.

    ClusterLinkExistsErrorResponse:
      description: A cluster link already exists with the provided link name
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 404
            message: A cluster link already exists with the provided link name

    TimeoutErrorResponse:
      description: The server received the request, but the operation timed out
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            error_code: 408
            message: The server received the request, but the operation timed out
tags:
  - name: Cluster (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Configs (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: ACL (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Consumer Group (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Partition (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Topic (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Records (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
  - name: Cluster Linking (v3)
    description: |-
      [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)
