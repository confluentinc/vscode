/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { ClusterData } from "../models/index";
import { ClusterDataFromJSON, ClusterDataToJSON } from "../models/index";

export interface GetKafkaClusterRequest {
  cluster_id: string;
}

/**
 *
 */
export class ClusterV3Api extends runtime.BaseAPI {
  /**
   * [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)  Return the Kafka cluster with the specified ``cluster_id``.
   * Get Cluster
   */
  async getKafkaClusterRaw(
    requestParameters: GetKafkaClusterRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<ClusterData>> {
    if (requestParameters["cluster_id"] == null) {
      throw new runtime.RequiredError(
        "cluster_id",
        'Required parameter "cluster_id" was null or undefined when calling getKafkaCluster().',
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      // oauth required
      headerParameters["Authorization"] = await this.configuration.accessToken(
        "external-access-token",
        [],
      );
    }

    if (
      this.configuration &&
      (this.configuration.username !== undefined || this.configuration.password !== undefined)
    ) {
      headerParameters["Authorization"] =
        "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
    }
    const response = await this.request(
      {
        path: `/kafka/v3/clusters/{cluster_id}`.replace(
          `{${"cluster_id"}}`,
          encodeURIComponent(String(requestParameters["cluster_id"])),
        ),
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => ClusterDataFromJSON(jsonValue));
  }

  /**
   * [![Generally Available](https://img.shields.io/badge/Lifecycle%20Stage-Generally%20Available-%2345c6e8)](#section/Versioning/API-Lifecycle-Policy)  Return the Kafka cluster with the specified ``cluster_id``.
   * Get Cluster
   */
  async getKafkaCluster(
    requestParameters: GetKafkaClusterRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<ClusterData> {
    const response = await this.getKafkaClusterRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
