/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Relationship } from "./Relationship";
import {
  RelationshipFromJSON,
  RelationshipFromJSONTyped,
  RelationshipToJSON,
} from "./Relationship";
import type { ResourceMetadata } from "./ResourceMetadata";
import {
  ResourceMetadataFromJSON,
  ResourceMetadataFromJSONTyped,
  ResourceMetadataToJSON,
} from "./ResourceMetadata";

/**
 *
 * @export
 * @interface AlterBrokerReplicaExclusionData
 */
export interface AlterBrokerReplicaExclusionData {
  /**
   *
   * @type {string}
   * @memberof AlterBrokerReplicaExclusionData
   */
  kind: string;
  /**
   *
   * @type {ResourceMetadata}
   * @memberof AlterBrokerReplicaExclusionData
   */
  metadata: ResourceMetadata;
  /**
   *
   * @type {string}
   * @memberof AlterBrokerReplicaExclusionData
   */
  cluster_id: string;
  /**
   *
   * @type {number}
   * @memberof AlterBrokerReplicaExclusionData
   */
  broker_id: number;
  /**
   *
   * @type {string}
   * @memberof AlterBrokerReplicaExclusionData
   */
  exclusion: string;
  /**
   *
   * @type {string}
   * @memberof AlterBrokerReplicaExclusionData
   */
  reason: string;
  /**
   *
   * @type {number}
   * @memberof AlterBrokerReplicaExclusionData
   */
  error_code?: number | null;
  /**
   *
   * @type {string}
   * @memberof AlterBrokerReplicaExclusionData
   */
  error_message?: string | null;
  /**
   *
   * @type {Relationship}
   * @memberof AlterBrokerReplicaExclusionData
   */
  broker: Relationship;
}

/**
 * Check if a given object implements the AlterBrokerReplicaExclusionData interface.
 */
export function instanceOfAlterBrokerReplicaExclusionData(
  value: object,
): value is AlterBrokerReplicaExclusionData {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("cluster_id" in value) || value["cluster_id"] === undefined) return false;
  if (!("broker_id" in value) || value["broker_id"] === undefined) return false;
  if (!("exclusion" in value) || value["exclusion"] === undefined) return false;
  if (!("reason" in value) || value["reason"] === undefined) return false;
  if (!("broker" in value) || value["broker"] === undefined) return false;
  return true;
}

export function AlterBrokerReplicaExclusionDataFromJSON(
  json: any,
): AlterBrokerReplicaExclusionData {
  return AlterBrokerReplicaExclusionDataFromJSONTyped(json, false);
}

export function AlterBrokerReplicaExclusionDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AlterBrokerReplicaExclusionData {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceMetadataFromJSON(json["metadata"]),
    cluster_id: json["cluster_id"],
    broker_id: json["broker_id"],
    exclusion: json["exclusion"],
    reason: json["reason"],
    error_code: json["error_code"] == null ? undefined : json["error_code"],
    error_message: json["error_message"] == null ? undefined : json["error_message"],
    broker: RelationshipFromJSON(json["broker"]),
  };
}

export function AlterBrokerReplicaExclusionDataToJSON(
  value?: AlterBrokerReplicaExclusionData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceMetadataToJSON(value["metadata"]),
    cluster_id: value["cluster_id"],
    broker_id: value["broker_id"],
    exclusion: value["exclusion"],
    reason: value["reason"],
    error_code: value["error_code"],
    error_message: value["error_message"],
    broker: RelationshipToJSON(value["broker"]),
  };
}
