/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ReassignmentData } from "./ReassignmentData";
import {
  ReassignmentDataFromJSON,
  ReassignmentDataFromJSONTyped,
  ReassignmentDataToJSON,
} from "./ReassignmentData";
import type { ResourceCollectionMetadata } from "./ResourceCollectionMetadata";
import {
  ResourceCollectionMetadataFromJSON,
  ResourceCollectionMetadataFromJSONTyped,
  ResourceCollectionMetadataToJSON,
} from "./ResourceCollectionMetadata";

/**
 *
 * @export
 * @interface ReassignmentDataList
 */
export interface ReassignmentDataList {
  /**
   *
   * @type {string}
   * @memberof ReassignmentDataList
   */
  kind: string;
  /**
   *
   * @type {ResourceCollectionMetadata}
   * @memberof ReassignmentDataList
   */
  metadata: ResourceCollectionMetadata;
  /**
   *
   * @type {Array<ReassignmentData>}
   * @memberof ReassignmentDataList
   */
  data: Array<ReassignmentData>;
}

/**
 * Check if a given object implements the ReassignmentDataList interface.
 */
export function instanceOfReassignmentDataList(value: object): value is ReassignmentDataList {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("data" in value) || value["data"] === undefined) return false;
  return true;
}

export function ReassignmentDataListFromJSON(json: any): ReassignmentDataList {
  return ReassignmentDataListFromJSONTyped(json, false);
}

export function ReassignmentDataListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ReassignmentDataList {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceCollectionMetadataFromJSON(json["metadata"]),
    data: (json["data"] as Array<any>).map(ReassignmentDataFromJSON),
  };
}

export function ReassignmentDataListToJSON(value?: ReassignmentDataList | null): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceCollectionMetadataToJSON(value["metadata"]),
    data: (value["data"] as Array<any>).map(ReassignmentDataToJSON),
  };
}
