/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: kafka-clients-proxy-team@confluent.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { AclResourceType } from "./AclResourceType";
import {
  AclResourceTypeFromJSON,
  AclResourceTypeFromJSONTyped,
  AclResourceTypeToJSON,
} from "./AclResourceType";
import type { ResourceMetadata } from "./ResourceMetadata";
import {
  ResourceMetadataFromJSON,
  ResourceMetadataFromJSONTyped,
  ResourceMetadataToJSON,
} from "./ResourceMetadata";

/**
 *
 * @export
 * @interface AclData
 */
export interface AclData {
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  kind: string;
  /**
   *
   * @type {ResourceMetadata}
   * @memberof AclData
   */
  metadata: ResourceMetadata;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  cluster_id: string;
  /**
   *
   * @type {AclResourceType}
   * @memberof AclData
   */
  resource_type: AclResourceType;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  resource_name: string;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  pattern_type: string;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  principal: string;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  host: string;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  operation: string;
  /**
   *
   * @type {string}
   * @memberof AclData
   */
  permission: string;
}

/**
 * Check if a given object implements the AclData interface.
 */
export function instanceOfAclData(value: object): value is AclData {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("cluster_id" in value) || value["cluster_id"] === undefined) return false;
  if (!("resource_type" in value) || value["resource_type"] === undefined) return false;
  if (!("resource_name" in value) || value["resource_name"] === undefined) return false;
  if (!("pattern_type" in value) || value["pattern_type"] === undefined) return false;
  if (!("principal" in value) || value["principal"] === undefined) return false;
  if (!("host" in value) || value["host"] === undefined) return false;
  if (!("operation" in value) || value["operation"] === undefined) return false;
  if (!("permission" in value) || value["permission"] === undefined) return false;
  return true;
}

export function AclDataFromJSON(json: any): AclData {
  return AclDataFromJSONTyped(json, false);
}

export function AclDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AclData {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceMetadataFromJSON(json["metadata"]),
    cluster_id: json["cluster_id"],
    resource_type: AclResourceTypeFromJSON(json["resource_type"]),
    resource_name: json["resource_name"],
    pattern_type: json["pattern_type"],
    principal: json["principal"],
    host: json["host"],
    operation: json["operation"],
    permission: json["permission"],
  };
}

export function AclDataToJSON(value?: AclData | null): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceMetadataToJSON(value["metadata"]),
    cluster_id: value["cluster_id"],
    resource_type: AclResourceTypeToJSON(value["resource_type"]),
    resource_name: value["resource_name"],
    pattern_type: value["pattern_type"],
    principal: value["principal"],
    host: value["host"],
    operation: value["operation"],
    permission: value["permission"],
  };
}
