/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: kafka-clients-proxy-team@confluent.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ResourceMetadata } from "./ResourceMetadata";
import {
  ResourceMetadataFromJSON,
  ResourceMetadataFromJSONTyped,
  ResourceMetadataToJSON,
} from "./ResourceMetadata";

/**
 *
 * @export
 * @interface ReplicaStatusData
 */
export interface ReplicaStatusData {
  /**
   *
   * @type {string}
   * @memberof ReplicaStatusData
   */
  kind: string;
  /**
   *
   * @type {ResourceMetadata}
   * @memberof ReplicaStatusData
   */
  metadata: ResourceMetadata;
  /**
   *
   * @type {string}
   * @memberof ReplicaStatusData
   */
  cluster_id: string;
  /**
   *
   * @type {string}
   * @memberof ReplicaStatusData
   */
  topic_name: string;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  broker_id: number;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  partition_id: number;
  /**
   *
   * @type {boolean}
   * @memberof ReplicaStatusData
   */
  is_leader: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ReplicaStatusData
   */
  is_observer: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ReplicaStatusData
   */
  is_isr_eligible: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ReplicaStatusData
   */
  is_in_isr: boolean;
  /**
   *
   * @type {boolean}
   * @memberof ReplicaStatusData
   */
  is_caught_up: boolean;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  log_start_offset: number;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  log_end_offset: number;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  last_caught_up_time_ms: number;
  /**
   *
   * @type {number}
   * @memberof ReplicaStatusData
   */
  last_fetch_time_ms: number;
  /**
   *
   * @type {string}
   * @memberof ReplicaStatusData
   */
  link_name?: string;
}

/**
 * Check if a given object implements the ReplicaStatusData interface.
 */
export function instanceOfReplicaStatusData(value: object): value is ReplicaStatusData {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("cluster_id" in value) || value["cluster_id"] === undefined) return false;
  if (!("topic_name" in value) || value["topic_name"] === undefined) return false;
  if (!("broker_id" in value) || value["broker_id"] === undefined) return false;
  if (!("partition_id" in value) || value["partition_id"] === undefined) return false;
  if (!("is_leader" in value) || value["is_leader"] === undefined) return false;
  if (!("is_observer" in value) || value["is_observer"] === undefined) return false;
  if (!("is_isr_eligible" in value) || value["is_isr_eligible"] === undefined) return false;
  if (!("is_in_isr" in value) || value["is_in_isr"] === undefined) return false;
  if (!("is_caught_up" in value) || value["is_caught_up"] === undefined) return false;
  if (!("log_start_offset" in value) || value["log_start_offset"] === undefined) return false;
  if (!("log_end_offset" in value) || value["log_end_offset"] === undefined) return false;
  if (!("last_caught_up_time_ms" in value) || value["last_caught_up_time_ms"] === undefined)
    return false;
  if (!("last_fetch_time_ms" in value) || value["last_fetch_time_ms"] === undefined) return false;
  return true;
}

export function ReplicaStatusDataFromJSON(json: any): ReplicaStatusData {
  return ReplicaStatusDataFromJSONTyped(json, false);
}

export function ReplicaStatusDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ReplicaStatusData {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceMetadataFromJSON(json["metadata"]),
    cluster_id: json["cluster_id"],
    topic_name: json["topic_name"],
    broker_id: json["broker_id"],
    partition_id: json["partition_id"],
    is_leader: json["is_leader"],
    is_observer: json["is_observer"],
    is_isr_eligible: json["is_isr_eligible"],
    is_in_isr: json["is_in_isr"],
    is_caught_up: json["is_caught_up"],
    log_start_offset: json["log_start_offset"],
    log_end_offset: json["log_end_offset"],
    last_caught_up_time_ms: json["last_caught_up_time_ms"],
    last_fetch_time_ms: json["last_fetch_time_ms"],
    link_name: json["link_name"] == null ? undefined : json["link_name"],
  };
}

export function ReplicaStatusDataToJSON(value?: ReplicaStatusData | null): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceMetadataToJSON(value["metadata"]),
    cluster_id: value["cluster_id"],
    topic_name: value["topic_name"],
    broker_id: value["broker_id"],
    partition_id: value["partition_id"],
    is_leader: value["is_leader"],
    is_observer: value["is_observer"],
    is_isr_eligible: value["is_isr_eligible"],
    is_in_isr: value["is_in_isr"],
    is_caught_up: value["is_caught_up"],
    log_start_offset: value["log_start_offset"],
    log_end_offset: value["log_end_offset"],
    last_caught_up_time_ms: value["last_caught_up_time_ms"],
    last_fetch_time_ms: value["last_fetch_time_ms"],
    link_name: value["link_name"],
  };
}
