/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: kafka-clients-proxy-team@confluent.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Relationship } from "./Relationship";
import {
  RelationshipFromJSON,
  RelationshipFromJSONTyped,
  RelationshipToJSON,
} from "./Relationship";
import type { ResourceMetadata } from "./ResourceMetadata";
import {
  ResourceMetadataFromJSON,
  ResourceMetadataFromJSONTyped,
  ResourceMetadataToJSON,
} from "./ResourceMetadata";

/**
 *
 * @export
 * @interface AnyUnevenLoadData
 */
export interface AnyUnevenLoadData {
  /**
   *
   * @type {string}
   * @memberof AnyUnevenLoadData
   */
  kind: string;
  /**
   *
   * @type {ResourceMetadata}
   * @memberof AnyUnevenLoadData
   */
  metadata: ResourceMetadata;
  /**
   *
   * @type {string}
   * @memberof AnyUnevenLoadData
   */
  cluster_id: string;
  /**
   *
   * @type {string}
   * @memberof AnyUnevenLoadData
   */
  status: string;
  /**
   *
   * @type {string}
   * @memberof AnyUnevenLoadData
   */
  previous_status: string;
  /**
   * The date and time at which this task was created.
   * @type {Date}
   * @memberof AnyUnevenLoadData
   */
  readonly status_updated_at: Date;
  /**
   * The date and time at which this task was created.
   * @type {Date}
   * @memberof AnyUnevenLoadData
   */
  readonly previous_status_updated_at: Date;
  /**
   *
   * @type {number}
   * @memberof AnyUnevenLoadData
   */
  error_code?: number | null;
  /**
   *
   * @type {string}
   * @memberof AnyUnevenLoadData
   */
  error_message?: string | null;
  /**
   *
   * @type {Relationship}
   * @memberof AnyUnevenLoadData
   */
  broker_tasks: Relationship;
}

/**
 * Check if a given object implements the AnyUnevenLoadData interface.
 */
export function instanceOfAnyUnevenLoadData(value: object): value is AnyUnevenLoadData {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("cluster_id" in value) || value["cluster_id"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  if (!("previous_status" in value) || value["previous_status"] === undefined) return false;
  if (!("status_updated_at" in value) || value["status_updated_at"] === undefined) return false;
  if (!("previous_status_updated_at" in value) || value["previous_status_updated_at"] === undefined)
    return false;
  if (!("broker_tasks" in value) || value["broker_tasks"] === undefined) return false;
  return true;
}

export function AnyUnevenLoadDataFromJSON(json: any): AnyUnevenLoadData {
  return AnyUnevenLoadDataFromJSONTyped(json, false);
}

export function AnyUnevenLoadDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AnyUnevenLoadData {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceMetadataFromJSON(json["metadata"]),
    cluster_id: json["cluster_id"],
    status: json["status"],
    previous_status: json["previous_status"],
    status_updated_at: new Date(json["status_updated_at"]),
    previous_status_updated_at: new Date(json["previous_status_updated_at"]),
    error_code: json["error_code"] == null ? undefined : json["error_code"],
    error_message: json["error_message"] == null ? undefined : json["error_message"],
    broker_tasks: RelationshipFromJSON(json["broker_tasks"]),
  };
}

export function AnyUnevenLoadDataToJSON(
  value?: Omit<AnyUnevenLoadData, "status_updated_at" | "previous_status_updated_at"> | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceMetadataToJSON(value["metadata"]),
    cluster_id: value["cluster_id"],
    status: value["status"],
    previous_status: value["previous_status"],
    error_code: value["error_code"],
    error_message: value["error_message"],
    broker_tasks: RelationshipToJSON(value["broker_tasks"]),
  };
}
