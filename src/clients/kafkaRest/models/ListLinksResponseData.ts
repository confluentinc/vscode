/* tslint:disable */
/* eslint-disable */
/**
 * REST Admin API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { LinkTask } from "./LinkTask";
import { LinkTaskFromJSON, LinkTaskFromJSONTyped, LinkTaskToJSON } from "./LinkTask";
import type { ResourceMetadata } from "./ResourceMetadata";
import {
  ResourceMetadataFromJSON,
  ResourceMetadataFromJSONTyped,
  ResourceMetadataToJSON,
} from "./ResourceMetadata";

/**
 *
 * @export
 * @interface ListLinksResponseData
 */
export interface ListLinksResponseData {
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  kind: string;
  /**
   *
   * @type {ResourceMetadata}
   * @memberof ListLinksResponseData
   */
  metadata: ResourceMetadata;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  source_cluster_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  destination_cluster_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  remote_cluster_id?: string | null;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  link_name: string;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   * @deprecated
   */
  link_id?: string;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  cluster_link_id: string;
  /**
   *
   * @type {Array<string>}
   * @memberof ListLinksResponseData
   */
  topic_names: Array<string>;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  link_error?: string;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  link_error_message?: string | null;
  /**
   *
   * @type {string}
   * @memberof ListLinksResponseData
   */
  link_state?: string;
  /**
   *
   * @type {Array<LinkTask>}
   * @memberof ListLinksResponseData
   */
  tasks?: Array<LinkTask> | null;
}

/**
 * Check if a given object implements the ListLinksResponseData interface.
 */
export function instanceOfListLinksResponseData(value: object): value is ListLinksResponseData {
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("link_name" in value) || value["link_name"] === undefined) return false;
  if (!("cluster_link_id" in value) || value["cluster_link_id"] === undefined) return false;
  if (!("topic_names" in value) || value["topic_names"] === undefined) return false;
  return true;
}

export function ListLinksResponseDataFromJSON(json: any): ListLinksResponseData {
  return ListLinksResponseDataFromJSONTyped(json, false);
}

export function ListLinksResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ListLinksResponseData {
  if (json == null) {
    return json;
  }
  return {
    kind: json["kind"],
    metadata: ResourceMetadataFromJSON(json["metadata"]),
    source_cluster_id: json["source_cluster_id"] == null ? undefined : json["source_cluster_id"],
    destination_cluster_id:
      json["destination_cluster_id"] == null ? undefined : json["destination_cluster_id"],
    remote_cluster_id: json["remote_cluster_id"] == null ? undefined : json["remote_cluster_id"],
    link_name: json["link_name"],
    link_id: json["link_id"] == null ? undefined : json["link_id"],
    cluster_link_id: json["cluster_link_id"],
    topic_names: json["topic_names"],
    link_error: json["link_error"] == null ? undefined : json["link_error"],
    link_error_message: json["link_error_message"] == null ? undefined : json["link_error_message"],
    link_state: json["link_state"] == null ? undefined : json["link_state"],
    tasks: json["tasks"] == null ? undefined : (json["tasks"] as Array<any>).map(LinkTaskFromJSON),
  };
}

export function ListLinksResponseDataToJSON(value?: ListLinksResponseData | null): any {
  if (value == null) {
    return value;
  }
  return {
    kind: value["kind"],
    metadata: ResourceMetadataToJSON(value["metadata"]),
    source_cluster_id: value["source_cluster_id"],
    destination_cluster_id: value["destination_cluster_id"],
    remote_cluster_id: value["remote_cluster_id"],
    link_name: value["link_name"],
    link_id: value["link_id"],
    cluster_link_id: value["cluster_link_id"],
    topic_names: value["topic_names"],
    link_error: value["link_error"],
    link_error_message: value["link_error_message"],
    link_state: value["link_state"],
    tasks: value["tasks"] == null ? undefined : (value["tasks"] as Array<any>).map(LinkTaskToJSON),
  };
}
