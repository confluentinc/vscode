/* tslint:disable */
/* eslint-disable */
/**
 * Flink Compute Pool Management API
 * This is the Flink Compute Pool management API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { FcpmV2RegionListDataInner } from "./FcpmV2RegionListDataInner";
import {
  FcpmV2RegionListDataInnerFromJSON,
  FcpmV2RegionListDataInnerFromJSONTyped,
  FcpmV2RegionListDataInnerToJSON,
  FcpmV2RegionListDataInnerToJSONTyped,
} from "./FcpmV2RegionListDataInner";
import type { FcpmV2RegionListMetadata } from "./FcpmV2RegionListMetadata";
import {
  FcpmV2RegionListMetadataFromJSON,
  FcpmV2RegionListMetadataFromJSONTyped,
  FcpmV2RegionListMetadataToJSON,
  FcpmV2RegionListMetadataToJSONTyped,
} from "./FcpmV2RegionListMetadata";

/**
 * `Region` objects represent cloud provider regions available when placing Flink compute pools.
 * The API allows you to list Flink regions.
 *
 *
 * ## The Regions Model
 * <SchemaDefinition schemaRef="#/components/schemas/fcpm.v2.Region" />
 * @export
 * @interface FcpmV2RegionList
 */
export interface FcpmV2RegionList {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof FcpmV2RegionList
   */
  readonly api_version: FcpmV2RegionListApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof FcpmV2RegionList
   */
  readonly kind: FcpmV2RegionListKindEnum;
  /**
   *
   * @type {FcpmV2RegionListMetadata}
   * @memberof FcpmV2RegionList
   */
  metadata: FcpmV2RegionListMetadata;
  /**
   * A data property that contains an array of resource items. Each entry in the array is a separate resource.
   * @type {Set<FcpmV2RegionListDataInner>}
   * @memberof FcpmV2RegionList
   */
  data: Set<FcpmV2RegionListDataInner>;
}

/**
 * @export
 * @enum {string}
 */
export enum FcpmV2RegionListApiVersionEnum {
  FcpmV2 = "fcpm/v2",
}
/**
 * @export
 * @enum {string}
 */
export enum FcpmV2RegionListKindEnum {
  RegionList = "RegionList",
}

/**
 * Check if a given object implements the FcpmV2RegionList interface.
 */
export function instanceOfFcpmV2RegionList(value: object): value is FcpmV2RegionList {
  if (!("api_version" in value) || value["api_version"] === undefined) return false;
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("metadata" in value) || value["metadata"] === undefined) return false;
  if (!("data" in value) || value["data"] === undefined) return false;
  return true;
}

export function FcpmV2RegionListFromJSON(json: any): FcpmV2RegionList {
  return FcpmV2RegionListFromJSONTyped(json, false);
}

export function FcpmV2RegionListFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FcpmV2RegionList {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"],
    kind: json["kind"],
    metadata: FcpmV2RegionListMetadataFromJSON(json["metadata"]),
    data: new Set((json["data"] as Array<any>).map(FcpmV2RegionListDataInnerFromJSON)),
  };
}

export function FcpmV2RegionListToJSON(json: any): FcpmV2RegionList {
  return FcpmV2RegionListToJSONTyped(json, false);
}

export function FcpmV2RegionListToJSONTyped(
  value?: Omit<FcpmV2RegionList, "api_version" | "kind"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: FcpmV2RegionListMetadataToJSON(value["metadata"]),
    data: Array.from(value["data"] as Set<any>).map(FcpmV2RegionListDataInnerToJSON),
  };
}
