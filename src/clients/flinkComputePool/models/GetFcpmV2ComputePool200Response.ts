/* tslint:disable */
/* eslint-disable */
/**
 * Flink Compute Pool Management API
 * This is the Flink Compute Pool management API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { FcpmV2ComputePoolStatus } from "./FcpmV2ComputePoolStatus";
import {
  FcpmV2ComputePoolStatusFromJSON,
  FcpmV2ComputePoolStatusFromJSONTyped,
  FcpmV2ComputePoolStatusToJSON,
  FcpmV2ComputePoolStatusToJSONTyped,
} from "./FcpmV2ComputePoolStatus";
import type { ListFcpmV2ComputePools200ResponseAllOfDataInnerSpec } from "./ListFcpmV2ComputePools200ResponseAllOfDataInnerSpec";
import {
  ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecFromJSON,
  ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecFromJSONTyped,
  ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecToJSON,
  ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecToJSONTyped,
} from "./ListFcpmV2ComputePools200ResponseAllOfDataInnerSpec";
import type { FcpmV2ComputePoolMetadata } from "./FcpmV2ComputePoolMetadata";
import {
  FcpmV2ComputePoolMetadataFromJSON,
  FcpmV2ComputePoolMetadataFromJSONTyped,
  FcpmV2ComputePoolMetadataToJSON,
  FcpmV2ComputePoolMetadataToJSONTyped,
} from "./FcpmV2ComputePoolMetadata";

/**
 *
 * @export
 * @interface GetFcpmV2ComputePool200Response
 */
export interface GetFcpmV2ComputePool200Response {
  /**
   * APIVersion defines the schema version of this representation of a resource.
   * @type {string}
   * @memberof GetFcpmV2ComputePool200Response
   */
  readonly api_version: GetFcpmV2ComputePool200ResponseApiVersionEnum;
  /**
   * Kind defines the object this REST resource represents.
   * @type {string}
   * @memberof GetFcpmV2ComputePool200Response
   */
  readonly kind: GetFcpmV2ComputePool200ResponseKindEnum;
  /**
   * ID is the "natural identifier" for an object within its scope/namespace; it is normally unique across time but not space. That is, you can assume that the ID will not be reclaimed and reused after an object is deleted ("time"); however, it may collide with IDs for other object `kinds` or objects of the same `kind` within a different scope/namespace ("space").
   * @type {string}
   * @memberof GetFcpmV2ComputePool200Response
   */
  readonly id: string;
  /**
   *
   * @type {FcpmV2ComputePoolMetadata}
   * @memberof GetFcpmV2ComputePool200Response
   */
  metadata?: FcpmV2ComputePoolMetadata;
  /**
   *
   * @type {ListFcpmV2ComputePools200ResponseAllOfDataInnerSpec}
   * @memberof GetFcpmV2ComputePool200Response
   */
  spec: ListFcpmV2ComputePools200ResponseAllOfDataInnerSpec;
  /**
   *
   * @type {FcpmV2ComputePoolStatus}
   * @memberof GetFcpmV2ComputePool200Response
   */
  status: FcpmV2ComputePoolStatus;
}

/**
 * @export
 */
export const GetFcpmV2ComputePool200ResponseApiVersionEnum = {
  FcpmV2: "fcpm/v2",
} as const;
export type GetFcpmV2ComputePool200ResponseApiVersionEnum =
  (typeof GetFcpmV2ComputePool200ResponseApiVersionEnum)[keyof typeof GetFcpmV2ComputePool200ResponseApiVersionEnum];

/**
 * @export
 */
export const GetFcpmV2ComputePool200ResponseKindEnum = {
  ComputePool: "ComputePool",
} as const;
export type GetFcpmV2ComputePool200ResponseKindEnum =
  (typeof GetFcpmV2ComputePool200ResponseKindEnum)[keyof typeof GetFcpmV2ComputePool200ResponseKindEnum];

/**
 * Check if a given object implements the GetFcpmV2ComputePool200Response interface.
 */
export function instanceOfGetFcpmV2ComputePool200Response(
  value: object,
): value is GetFcpmV2ComputePool200Response {
  if (!("api_version" in value) || value["api_version"] === undefined) return false;
  if (!("kind" in value) || value["kind"] === undefined) return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("spec" in value) || value["spec"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  return true;
}

export function GetFcpmV2ComputePool200ResponseFromJSON(
  json: any,
): GetFcpmV2ComputePool200Response {
  return GetFcpmV2ComputePool200ResponseFromJSONTyped(json, false);
}

export function GetFcpmV2ComputePool200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GetFcpmV2ComputePool200Response {
  if (json == null) {
    return json;
  }
  return {
    api_version: json["api_version"],
    kind: json["kind"],
    id: json["id"],
    metadata:
      json["metadata"] == null ? undefined : FcpmV2ComputePoolMetadataFromJSON(json["metadata"]),
    spec: ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecFromJSON(json["spec"]),
    status: FcpmV2ComputePoolStatusFromJSON(json["status"]),
  };
}

export function GetFcpmV2ComputePool200ResponseToJSON(json: any): GetFcpmV2ComputePool200Response {
  return GetFcpmV2ComputePool200ResponseToJSONTyped(json, false);
}

export function GetFcpmV2ComputePool200ResponseToJSONTyped(
  value?: Omit<GetFcpmV2ComputePool200Response, "api_version" | "kind" | "id"> | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    metadata: FcpmV2ComputePoolMetadataToJSON(value["metadata"]),
    spec: ListFcpmV2ComputePools200ResponseAllOfDataInnerSpecToJSON(value["spec"]),
    status: FcpmV2ComputePoolStatusToJSON(value["status"]),
  };
}
